import{_ as n,c as s,o as a,d as p}from"./app.7277c524.js";const b='{"title":"Immutable.js","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4E00\u3001\u4ECB\u7ECD","slug":"\u4E00\u3001\u4ECB\u7ECD"},{"level":3,"title":"\u4EC0\u4E48\u662FImmutable.js","slug":"\u4EC0\u4E48\u662Fimmutable-js"},{"level":3,"title":"\u4F18\u7F3A\u70B9","slug":"\u4F18\u7F3A\u70B9"},{"level":2,"title":"\u4E8C\u3001Immutable.js \u7684\u51E0\u79CD\u6570\u636E\u7C7B\u578B","slug":"\u4E8C\u3001immutable-js-\u7684\u51E0\u79CD\u6570\u636E\u7C7B\u578B"},{"level":2,"title":"\u4E09\u3001Immutable\u5E38\u7528API","slug":"\u4E09\u3001immutable\u5E38\u7528api"},{"level":3,"title":"fromJS","slug":"fromjs"},{"level":3,"title":"toJS()","slug":"tojs"},{"level":3,"title":"is()","slug":"is"},{"level":3,"title":"List() \u548C Map()","slug":"list-\u548C-map"},{"level":3,"title":"List.isList() \u548C Map.isMap()","slug":"list-islist-\u548C-map-ismap"},{"level":3,"title":"size","slug":"size"},{"level":3,"title":"get() \u3001 getIn()","slug":"get-\u3001-getin"},{"level":3,"title":"has() \u3001 hasIn()","slug":"has-\u3001-hasin"},{"level":3,"title":"includes()","slug":"includes"},{"level":3,"title":"first() \u3001 last()","slug":"first-\u3001-last"},{"level":2,"title":"Immutable\u6570\u636E\u4FEE\u6539","slug":"immutable\u6570\u636E\u4FEE\u6539"},{"level":3,"title":"\u8BBE\u7F6E set()","slug":"\u8BBE\u7F6E-set"},{"level":3,"title":"setIn()","slug":"setin"},{"level":3,"title":"\u5220\u9664 delete","slug":"\u5220\u9664-delete"},{"level":3,"title":"deleteIn()","slug":"deletein"},{"level":3,"title":"deleteAll() (Map\u72EC\u6709\uFF0CList\u6CA1\u6709)","slug":"deleteall-map\u72EC\u6709\uFF0Clist\u6CA1\u6709"},{"level":3,"title":"\u66F4\u65B0 update()","slug":"\u66F4\u65B0-update"},{"level":3,"title":"updateIn()","slug":"updatein"},{"level":3,"title":"\u6E05\u9664 clear()","slug":"\u6E05\u9664-clear"},{"level":3,"title":"merge","slug":"merge"},{"level":3,"title":"concat()","slug":"concat"},{"level":3,"title":"map()","slug":"map"},{"level":3,"title":"mapKey()","slug":"mapkey"},{"level":3,"title":"mapEntries()","slug":"mapentries"},{"level":3,"title":"\u8FC7\u6EE4 filter","slug":"\u8FC7\u6EE4-filter"},{"level":3,"title":"\u53CD\u8F6C reverse","slug":"\u53CD\u8F6C-reverse"},{"level":3,"title":"\u6392\u5E8F sort & sortBy","slug":"\u6392\u5E8F-sort-sortby"},{"level":3,"title":"\u5206\u7EC4 groupBy","slug":"\u5206\u7EC4-groupby"},{"level":3,"title":"\u67E5\u627E\u6570\u636E indexOf() \u3001 lastIndexOf","slug":"\u67E5\u627E\u6570\u636E-indexof-\u3001-lastindexof"},{"level":3,"title":"findIndex() \u3001 findLastIndex()","slug":"findindex-\u3001-findlastindex"},{"level":3,"title":"find() \u3001 findLast()","slug":"find-\u3001-findlast"},{"level":3,"title":"findKey() \u3001 findLastKey()","slug":"findkey-\u3001-findlastkey"},{"level":3,"title":"findEntry() \u3001 findLastEntry()","slug":"findentry-\u3001-findlastentry"},{"level":3,"title":"keyOf() lastKeyOf()","slug":"keyof-lastkeyof"},{"level":3,"title":"max() \u3001 maxBy()","slug":"max-\u3001-maxby"},{"level":3,"title":"min() \u3001 minBy()","slug":"min-\u3001-minby"},{"level":3,"title":"\u521B\u5EFA\u5B50\u96C6 slice()","slug":"\u521B\u5EFA\u5B50\u96C6-slice"},{"level":3,"title":"rest()","slug":"rest"},{"level":3,"title":"butLast()","slug":"butlast"},{"level":3,"title":"skip()","slug":"skip"},{"level":3,"title":"skipLast()","slug":"skiplast"},{"level":3,"title":"skipWhile()","slug":"skipwhile"},{"level":3,"title":"skipUntil()","slug":"skipuntil"},{"level":3,"title":"take()","slug":"take"},{"level":3,"title":"takeLast()","slug":"takelast"},{"level":3,"title":"takeWhile()","slug":"takewhile"},{"level":3,"title":"takeUntil()","slug":"takeuntil"},{"level":3,"title":"\u5904\u7406\u6570\u636E reduce()","slug":"\u5904\u7406\u6570\u636E-reduce"},{"level":3,"title":"reduceRight()","slug":"reduceright"},{"level":3,"title":"every()","slug":"every"},{"level":3,"title":"some()","slug":"some"},{"level":3,"title":"join()","slug":"join"},{"level":3,"title":"isEmpty()","slug":"isempty"},{"level":3,"title":"count()","slug":"count"},{"level":3,"title":"countBy()","slug":"countby"}],"relativePath":"src/frontend/other-note/Immutable.md","lastUpdated":1649840977598}',t={},o=p(`<h1 id="immutable-js" tabindex="-1">Immutable.js <a class="header-anchor" href="#immutable-js" aria-hidden="true">#</a></h1><h2 id="\u4E00\u3001\u4ECB\u7ECD" tabindex="-1">\u4E00\u3001\u4ECB\u7ECD <a class="header-anchor" href="#\u4E00\u3001\u4ECB\u7ECD" aria-hidden="true">#</a></h2><h3 id="\u4EC0\u4E48\u662Fimmutable-js" tabindex="-1">\u4EC0\u4E48\u662FImmutable.js <a class="header-anchor" href="#\u4EC0\u4E48\u662Fimmutable-js" aria-hidden="true">#</a></h3><p>Immutable Data \u5C31\u662F\u4E00\u65E6\u521B\u5EFA\uFF0C\u5C31\u4E0D\u80FD\u518D\u88AB\u66F4\u6539\u7684\u6570\u636E\u3002\u5BF9 Immutable \u5BF9\u8C61\u7684\u4EFB\u4F55\u4FEE\u6539\u6216\u6DFB\u52A0\u5220\u9664\u64CD\u4F5C\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Immutable \u5BF9\u8C61\u3002Immutable\u5B9E\u73B0\u7684\u539F\u7406\u662F\u6301\u4E45\u5316\u7684\u6570\u636E\u7ED3\u6784\uFF1B</p><h3 id="\u4F18\u7F3A\u70B9" tabindex="-1">\u4F18\u7F3A\u70B9 <a class="header-anchor" href="#\u4F18\u7F3A\u70B9" aria-hidden="true">#</a></h3><p>\u4F18\u70B9\uFF1A</p><ul><li>\u964D\u4F4E Mutable \u5E26\u6765\u7684\u590D\u6742\u5EA6</li><li>\u8282\u7701\u5185\u5B58\u7A7A\u95F4</li><li>Undo/Redo\uFF0CCopy/Paste\uFF0C\u968F\u610F\u7A7F\u8D8A\uFF01</li><li>\u62E5\u62B1\u51FD\u6570\u5F0F\u7F16\u7A0B</li></ul><p>\u7F3A\u70B9\uFF1A</p><ul><li>\u5BB9\u6613\u4E0E\u539F\u751F\u5BF9\u8C61\u6DF7\u7528\uFF1B\uFF08\u5EFA\u8BAE\u4F7F\u7528fromJS\u521B\u5EFA\uFF0C\u5EFA\u8BAE\u6240\u6709\u7684immutable\u7684\u53D8\u91CF\u90FD\u4EE5$$\u5F00\u5934\uFF09</li><li>\u6BCF\u6B21\u8FD4\u56DE\u65B0\u5BF9\u8C61\uFF0C\u5BB9\u6613\u5FD8\u8BB0\u8D4B\u503C</li><li>\u5B66\u4E60\u6210\u672C\u9AD8</li><li>\u9700\u8981\u989D\u5916\u5F15\u5165\u8D44\u6E90\u6587\u4EF6</li></ul><h2 id="\u4E8C\u3001immutable-js-\u7684\u51E0\u79CD\u6570\u636E\u7C7B\u578B" tabindex="-1">\u4E8C\u3001Immutable.js \u7684\u51E0\u79CD\u6570\u636E\u7C7B\u578B <a class="header-anchor" href="#\u4E8C\u3001immutable-js-\u7684\u51E0\u79CD\u6570\u636E\u7C7B\u578B" aria-hidden="true">#</a></h2><ul><li><code>List</code>: \u6709\u5E8F\u7D22\u5F15\u96C6\uFF0C\u7C7B\u4F3CJavaScript\u4E2D\u7684Array\u3002</li><li><code>Map</code>: \u65E0\u5E8F\u7D22\u5F15\u96C6\uFF0C\u7C7B\u4F3CJavaScript\u4E2D\u7684Object\u3002</li><li><code>ArraySet</code>\uFF1A\u65E0\u5E8F\u4E14\u4E0D\u53EF\u91CD\u590D\u7684\u5217\u8868\uFF1B</li><li><code>OrderedMap</code>: \u6709\u5E8F\u7684Map\uFF0C\u6839\u636E\u6570\u636E\u7684set()\u8FDB\u884C\u6392\u5E8F\u3002</li><li><code>Set</code>: \u6CA1\u6709\u91CD\u590D\u503C\u7684\u96C6\u5408\u3002</li><li><code>OrderedSet</code>: \u6709\u5E8F\u7684Set\uFF0C\u6839\u636E\u6570\u636E\u7684add\u8FDB\u884C\u6392\u5E8F\u3002</li><li><code>Stack</code>: \u6709\u5E8F\u96C6\u5408\uFF0C\u652F\u6301\u4F7F\u7528unshift()\u548Cshift()\u6DFB\u52A0\u548C\u5220\u9664\u3002</li><li><code>Record</code>: \u4E00\u4E2A\u7528\u4E8E\u751F\u6210Record\u5B9E\u4F8B\u7684\u7C7B\u3002\u7C7B\u4F3C\u4E8EJavaScript\u7684Object\uFF0C\u4F46\u662F\u53EA\u63A5\u6536\u7279\u5B9A\u5B57\u7B26\u4E32\u4E3Akey\uFF0C\u5177\u6709\u9ED8\u8BA4\u503C\u3002</li><li><code>Seq</code>: \u5E8F\u5217\uFF0C\u4F46\u662F\u53EF\u80FD\u4E0D\u80FD\u7531\u5177\u4F53\u7684\u6570\u636E\u7ED3\u6784\u652F\u6301\u3002</li><li><code>Collection</code>: \u662F\u6784\u5EFA\u6240\u6709\u6570\u636E\u7ED3\u6784\u7684\u57FA\u7C7B\uFF0C\u4E0D\u53EF\u4EE5\u76F4\u63A5\u6784\u5EFA\u3002</li></ul><p>\u6700\u591A\u4F7F\u7528List\u548CMap\uFF1B</p><h2 id="\u4E09\u3001immutable\u5E38\u7528api" tabindex="-1">\u4E09\u3001Immutable\u5E38\u7528API <a class="header-anchor" href="#\u4E09\u3001immutable\u5E38\u7528api" aria-hidden="true">#</a></h2><h3 id="fromjs" tabindex="-1">fromJS <a class="header-anchor" href="#fromjs" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5C06\u4E00\u4E2Ajs\u6570\u636E\u8F6C\u6362\u4E3AImmutable\u7C7B\u578B\u7684\u6570\u636E \u7528\u6CD5\uFF1A<code>fromJS(value, converter)</code></p><h3 id="tojs" tabindex="-1">toJS() <a class="header-anchor" href="#tojs" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5C06\u4E00\u4E2AImmutable\u6570\u636E\u8F6C\u6362\u4E3AJS\u7C7B\u578B\u7684\u6570\u636E \u7528\u6CD5\uFF1A<code>value.toJS()</code></p><h3 id="is" tabindex="-1">is() <a class="header-anchor" href="#is" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5BF9\u4E24\u4E2A\u5BF9\u8C61\u8FDB\u884C\u6BD4\u8F83 \u7528\u6CD5\uFF1A<code>Immutable.is(map1,map2)</code></p><h3 id="list-\u548C-map" tabindex="-1">List() \u548C Map() <a class="header-anchor" href="#list-\u548C-map" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u7528\u6765\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684List/Map\u5BF9\u8C61</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Immutable<span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="list-islist-\u548C-map-ismap" tabindex="-1">List.isList() \u548C Map.isMap() <a class="header-anchor" href="#list-islist-\u548C-map-ismap" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u662F\u4E0D\u662FList/Map\u7C7B\u578B</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span>List<span class="token punctuation">.</span><span class="token function">isList</span><span class="token punctuation">(</span><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
Immutable<span class="token punctuation">.</span>Map<span class="token punctuation">.</span><span class="token function">isMap</span><span class="token punctuation">(</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5C5E\u6027\uFF0C\u83B7\u53D6List/Map\u7684\u957F\u5EA6\uFF0C\u7B49\u540C\u4E8E<code>ImmutableData.count()</code>;</p><h3 id="get-\u3001-getin" tabindex="-1">get() \u3001 getIn() <a class="header-anchor" href="#get-\u3001-getin" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u83B7\u53D6\u6570\u636E\u7ED3\u6784\u4E2D\u7684\u6570\u636E</p><div class="language-js"><pre><code>ImmutableData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6List\u7D22\u5F15\u7684\u5143\u7D20</span>
ImmutableData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6Map\u5BF9\u5E94key\u7684value</span>
ImmutableData<span class="token punctuation">.</span><span class="token function">getIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6\u5D4C\u5957\u6570\u7EC4\u4E2D\u7684\u6570\u636E</span>
ImmutableData<span class="token punctuation">.</span><span class="token function">getIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6\u5D4C\u5957map\u7684\u6570\u636E \u6BD4\u5982\uFF1Aa\u4E0B\u9762\u7684b</span>
</code></pre></div><h3 id="has-\u3001-hasin" tabindex="-1">has() \u3001 hasIn() <a class="header-anchor" href="#has-\u3001-hasin" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u662F\u5426\u5B58\u5728\u67D0\u4E00\u4E2Akey</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
</code></pre></div><h3 id="includes" tabindex="-1">includes() <a class="header-anchor" href="#includes" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u662F\u5426\u5B58\u5728\u67D0\u4E00\u4E2Avalue</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false \u4E0D\u5305\u542B\u5B57\u7B262</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false </span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">//false</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
</code></pre></div><h3 id="first-\u3001-last" tabindex="-1">first() \u3001 last() <a class="header-anchor" href="#first-\u3001-last" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u7528\u6765\u83B7\u53D6\u7B2C\u4E00\u4E2A\u5143\u7D20\u6216\u8005\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u82E5\u6CA1\u6709\u5219\u8FD4\u56DEundefined</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//1</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">last</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//{a:4,b:5}</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//1</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//{d:3,e:4}</span>
</code></pre></div><h2 id="immutable\u6570\u636E\u4FEE\u6539" tabindex="-1">Immutable\u6570\u636E\u4FEE\u6539 <a class="header-anchor" href="#immutable\u6570\u636E\u4FEE\u6539" aria-hidden="true">#</a></h2><p>\u8FD9\u91CC\u5BF9\u4E8E\u6570\u636E\u7684\u4FEE\u6539\uFF0C\u662F\u5BF9\u539F\u6570\u636E\u8FDB\u884C\u64CD\u4F5C\u540E\u7684\u503C\u8D4B\u503C\u7ED9\u4E00\u4E2A\u65B0\u7684\u6570\u636E\uFF0C\u5E76\u4E0D\u4F1A\u5BF9\u539F\u6570\u636E\u8FDB\u884C\u4FEE\u6539\uFF0C\u56E0\u4E3AImmutable\u662F\u4E0D\u53EF\u53D8\u7684\u6570\u636E\u7C7B\u578B\u3002</p><h3 id="\u8BBE\u7F6E-set" tabindex="-1">\u8BBE\u7F6E set() <a class="header-anchor" href="#\u8BBE\u7F6E-set" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8BBE\u7F6E\u7B2C\u4E00\u5C42key\u3001index\u7684\u503C</p><div class="language-js"><pre><code><span class="token keyword">const</span> originaList <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// List [0]</span>
originaList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// List [0, 1]</span>
originaList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;overwrittten&#39;</span><span class="token punctuation">)</span> <span class="token comment">// List [&#39;overwritten&#39;]</span>
originaList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// List [0, undefined, 2]</span>

<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">50000</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span> <span class="token comment">// 50001</span>

<span class="token keyword">const</span> originMap <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Map {}</span>
<span class="token keyword">const</span> newerMap <span class="token operator">=</span> originMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Map {key: &#39;value&#39;}</span>
<span class="token keyword">const</span> newestMap <span class="token operator">=</span> newerMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;newer value&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Map {key: &#39;newer value&#39;}</span>
</code></pre></div><h3 id="setin" tabindex="-1">setIn() <a class="header-anchor" href="#setin" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8BBE\u7F6E\u6DF1\u5C42\u7ED3\u6784\u4E2D\u67D0\u5C5E\u6027\u7684\u503C</p><div class="language-js"><pre><code><span class="token keyword">const</span> originalMap <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">subObject</span><span class="token operator">:</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">subKey</span><span class="token operator">:</span> <span class="token string">&#39;subvalue&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">subSubObject</span><span class="token operator">:</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">subSubKey</span><span class="token operator">:</span> <span class="token string">&#39;subSubValue&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> newMap <span class="token operator">=</span> originalMap<span class="token punctuation">.</span><span class="token function">setIn</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;subObject&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;subKey&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;ha ha!&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// Map {</span>
<span class="token comment">//   &quot;subObject&quot;: Map {</span>
<span class="token comment">//     &quot;subKey&quot;: &quot;ha ha!&quot;,</span>
<span class="token comment">//     &quot;subSubObject&quot;: Map { &quot;subSubKey&quot;: &quot;subSubValue&quot; }</span>
<span class="token comment">//   }</span>
<span class="token comment">// }</span>
<span class="token keyword">const</span> newerMap <span class="token operator">=</span> originalMap<span class="token punctuation">.</span><span class="token function">setIn</span><span class="token punctuation">(</span>
  <span class="token punctuation">[</span><span class="token string">&#39;subObject&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;subSubObject&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;subSubKey&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token string">&#39;ha ha ha!&#39;</span>
<span class="token punctuation">)</span>
<span class="token comment">// Map {</span>
<span class="token comment">//   &quot;subObject&quot;: Map {</span>
<span class="token comment">//     &quot;subKey&quot;: &quot;subvalue&quot;,</span>
<span class="token comment">//     &quot;subSubObject&quot;: Map { &quot;subSubKey&quot;: &quot;ha ha ha!&quot; }</span>
<span class="token comment">//   }</span>
<span class="token comment">// }</span>
</code></pre></div><p>\u7528\u6CD5\u4E0Eset()\u4E00\u6837\uFF0C\u53EA\u662F\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4EE3\u8868\u8981\u8BBE\u7F6E\u7684\u5C5E\u6027\u6240\u5728\u7684\u4F4D\u7F6E</p><h3 id="\u5220\u9664-delete" tabindex="-1">\u5220\u9664 delete <a class="header-anchor" href="#\u5220\u9664-delete" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u7528\u6765\u5220\u9664\u7B2C\u4E00\u5C42\u7ED3\u6784\u4E2D\u7684\u5C5E\u6027</p><div class="language-js"><pre><code><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// List [ 1, 2, 3, 4 ]</span>
<span class="token keyword">const</span> originalMap <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">otherKey</span><span class="token operator">:</span> <span class="token string">&#39;other value&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
originalMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&#39;otherKey&#39;</span><span class="token punctuation">)</span> <span class="token comment">// Map { &quot;key&quot;: &quot;value&quot; }</span>
</code></pre></div><h3 id="deletein" tabindex="-1">deleteIn() <a class="header-anchor" href="#deletein" aria-hidden="true">#</a></h3><p>\u7528\u6765\u5220\u9664\u6DF1\u5C42\u6570\u636E\uFF0C\u7528\u6CD5\u53C2\u8003setIn</p><h3 id="deleteall-map\u72EC\u6709\uFF0Clist\u6CA1\u6709" tabindex="-1">deleteAll() (Map\u72EC\u6709\uFF0CList\u6CA1\u6709) <a class="header-anchor" href="#deleteall-map\u72EC\u6709\uFF0Clist\u6CA1\u6709" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u7528\u6765\u5220\u9664Map\u4E2D\u7684\u591A\u4E2Akey</p><div class="language-js"><pre><code><span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;Aaron&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&quot;Barry&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&quot;Connor&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
names<span class="token punctuation">.</span><span class="token function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Map { &quot;b&quot;: &quot;Barry&quot; }</span>
</code></pre></div><h3 id="\u66F4\u65B0-update" tabindex="-1">\u66F4\u65B0 update() <a class="header-anchor" href="#\u66F4\u65B0-update" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5BF9 \u5BF9\u8C61\u4E2D\u7684\u67D0\u4E2A\u5C5E\u6027\u8FDB\u884C\u66F4\u65B0\uFF0C\u53EF\u5BF9\u539F\u6570\u636E\u8FDB\u884C\u76F8\u5173\u64CD\u4F5C</p><div class="language-js"><pre><code><span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> result <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> aMap <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> newMap <span class="token operator">=</span> aMap<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">,</span> <span class="token parameter">value</span> <span class="token operator">=&gt;</span> value <span class="token operator">+</span> value<span class="token punctuation">)</span>
</code></pre></div><h3 id="updatein" tabindex="-1">updateIn() <a class="header-anchor" href="#updatein" aria-hidden="true">#</a></h3><p>\u540CsetIn\uFF1B</p><h3 id="\u6E05\u9664-clear" tabindex="-1">\u6E05\u9664 clear() <a class="header-anchor" href="#\u6E05\u9664-clear" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u6E05\u9664\u6240\u6709\u6570\u636E</p><div class="language-js"><pre><code><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&#39;value&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//Map</span>
<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// List</span>
</code></pre></div><p>List\u4E2D\u7684<code>push</code>\u3001<code>pop</code>\u3001<code>unshift</code>\u3001<code>shift</code>\u3001<code>insert</code></p><div class="language-js"><pre><code><span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> 
<span class="token comment">//List [ 0, 1, 2, 3, 4, 5 ]</span>
<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">// List [ 1, 2, 3, 4, 5 ]</span>
<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// List[ 1, 2, 3 ]</span>
<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// List [ 1, 2, 3, 4 ]</span>
<span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// List [ 1, 2, 3, 4 ]</span>
</code></pre></div><h3 id="merge" tabindex="-1">merge <a class="header-anchor" href="#merge" aria-hidden="true">#</a></h3><ul><li><p><code>merge</code>\uFF1A\u6D45\u5408\u5E76\uFF0C\u65B0\u6570\u636E\u4E0E\u65E7\u6570\u636E\u5BF9\u6BD4\uFF0C\u65E7\u6570\u636E\u4E2D\u4E0D\u5B58\u5728\u7684\u5C5E\u6027\u76F4\u63A5\u6DFB\u52A0\uFF0C\u65E7\u6570\u636E\u4E2D\u5DF2\u5B58\u5728\u7684\u5C5E\u6027\u7528\u65B0\u6570\u636E\u4E2D\u7684\u8986\u76D6</p></li><li><p><code>mergrWith</code>\uFF1A\u81EA\u5B9A\u4E49\u6D45\u5408\u5E76\uFF0C\u53EF\u81EA\u884C\u8BBE\u7F6E\u67D0\u4E9B\u5C5E\u6027\u7684\u503C</p></li><li><p><code>mergeIn</code>\uFF1A\u5BF9\u6DF1\u5C42\u6570\u636E\u8FDB\u884C\u6D45\u5408\u5E76</p></li><li><p><code>mergeDeep</code>\uFF1A\u6DF1\u5408\u5E76\uFF0C\u65B0\u65E7\u6570\u636E\u4E2D\u540C\u65F6\u5B58\u5728\u7684\u7684\u5C5E\u6027\u4E3A\u65B0\u65E7\u6570\u636E\u5408\u5E76\u4E4B\u540E\u7684\u6570\u636E</p></li><li><p><code>mergeDeepIn</code>\uFF1A\u5BF9\u6DF1\u5C42\u6570\u636E\u8FDB\u884C\u6DF1\u5408\u5E76</p></li><li><p><code>mergrDeepWith</code>\uFF1A\u81EA\u5B9A\u4E49\u6DF1\u5408\u5E76\uFF0C\u53EF\u81EA\u884C\u8BBE\u7F6E\u67D0\u4E9B\u5C5E\u6027\u7684\u503C</p></li></ul><div class="language-js"><pre><code> <span class="token keyword">const</span> Map1 <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">222</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">333</span><span class="token punctuation">,</span><span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">444</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">const</span> Map2 <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">222</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">444</span><span class="token punctuation">,</span><span class="token literal-property property">f</span><span class="token operator">:</span><span class="token number">555</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token keyword">const</span> Map3 <span class="token operator">=</span> Map1<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>Map2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//Map {a:111,b:222,c:{e:444,f:555}}</span>
 <span class="token keyword">const</span> Map4 <span class="token operator">=</span> Map1<span class="token punctuation">.</span><span class="token function">mergeDeep</span><span class="token punctuation">(</span>Map2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//Map {a:111,b:222,c:{d:333,e:444,f:555}}</span>
 <span class="token keyword">const</span> Map5 <span class="token operator">=</span> Map1<span class="token punctuation">.</span><span class="token function">mergeWith</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">oldData<span class="token punctuation">,</span>newData<span class="token punctuation">,</span>key</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">666</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> newData
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>Map2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//Map {a:666,b:222,c:{e:444,f:555}}</span>
</code></pre></div><h3 id="concat" tabindex="-1">concat() <a class="header-anchor" href="#concat" aria-hidden="true">#</a></h3><p>\u5BF9\u8C61\u7684\u62FC\u63A5\uFF0C\u7528\u6CD5\u4E0Ejs\u6570\u7EC4\u4E2D\u7684concat()\u76F8\u540C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> List <span class="token operator">=</span> list1<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>list2<span class="token punctuation">)</span>
</code></pre></div><h3 id="map" tabindex="-1">map() <a class="header-anchor" href="#map" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u904D\u5386\u6574\u4E2A\u5BF9\u8C61\uFF0C\u5BF9Map/List\u5143\u7D20\u8FDB\u884C\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token operator">=&gt;</span><span class="token number">10</span><span class="token operator">*</span>val<span class="token punctuation">)</span>
<span class="token comment">//Map{a:10,b:20}</span>
</code></pre></div><h3 id="mapkey" tabindex="-1">mapKey() <a class="header-anchor" href="#mapkey" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1AMap\u7279\u6709\u7684mapKey\uFF0C\u904D\u5386\u6574\u4E2A\u5BF9\u8C61\uFF0C\u5BF9Map\u5143\u7D20\u7684key\u8FDB\u884C\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002</p><div class="language-js"><pre><code><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mapKey</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token operator">=&gt;</span>val<span class="token operator">+</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//Map{al:10,bl:20}</span>
</code></pre></div><h3 id="mapentries" tabindex="-1">mapEntries() <a class="header-anchor" href="#mapentries" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1AMap\u7279\u6709\u7684mapEntries()\uFF0C\u904D\u5386\u6574\u4E2A\u5BF9\u8C61\uFF0C\u5BF9Map\u5143\u7D20\u7684key\u548Cvalue\u540C\u65F6\u8FDB\u884C\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\u3002Map\u7684map()\u4E5F\u53EF\u5B9E\u73B0\u6B64\u529F\u80FD\u3002</p><div class="language-js"><pre><code><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>val</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>key<span class="token operator">+</span><span class="token string">&#39;l&#39;</span><span class="token punctuation">,</span>val<span class="token operator">*</span><span class="token number">10</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//Map{al:10,bl:20}</span>
</code></pre></div><h3 id="\u8FC7\u6EE4-filter" tabindex="-1">\u8FC7\u6EE4 filter <a class="header-anchor" href="#\u8FC7\u6EE4-filter" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC\u6240\u6709\u6EE1\u8DB3\u8FC7\u6EE4\u6761\u4EF6\u7684\u5143\u7D20</p><div class="language-js"><pre><code><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span>val</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> val <span class="token operator">==</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//Map{b:2}</span>
</code></pre></div><h3 id="\u53CD\u8F6C-reverse" tabindex="-1">\u53CD\u8F6C reverse <a class="header-anchor" href="#\u53CD\u8F6C-reverse" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5C06\u6570\u636E\u7684\u7ED3\u6784\u8FDB\u884C\u53CD\u8F6C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// List [5,4,3,2,1]</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">e</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">recerse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//Map {e:4,b:{c:2,d:3},a:1}</span>
</code></pre></div><h3 id="\u6392\u5E8F-sort-sortby" tabindex="-1">\u6392\u5E8F sort &amp; sortBy <a class="header-anchor" href="#\u6392\u5E8F-sort-sortby" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5BF9\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u6392\u5E8F</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// List [1,2,3,4,5,6]</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// List [1,2,3,4,5,6]</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span>index<span class="token punctuation">,</span>obj</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment">// List  [ {a:3}, {a:2}, {a:4}, {a:1} ]</span>

<span class="token comment">//Map</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//Map {b: 1, c: 2, a: 3, d: 5}</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//Map {b: 1, c: 2, a: 3, d: 5}</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sortBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> obj</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//Map {b: 1, c: 2, a: 3, d: 5}</span>
</code></pre></div><h3 id="\u5206\u7EC4-groupby" tabindex="-1">\u5206\u7EC4 groupBy <a class="header-anchor" href="#\u5206\u7EC4-groupby" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5BF9\u6570\u636E\u8FDB\u884C\u5206\u7EC4</p><div class="language-js"><pre><code><span class="token keyword">const</span> listOfMaps <span class="token operator">=</span> <span class="token function">List</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> groupsOfMaps <span class="token operator">=</span> listOfMaps<span class="token punctuation">.</span><span class="token function">groupBy</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;v&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Map {</span>
<span class="token comment">//   0: List [ Map{ &quot;v&quot;: 0 }, Map { &quot;v&quot;: 0 } ],</span>
<span class="token comment">//   1: List [ Map{ &quot;v&quot;: 1 }, Map { &quot;v&quot;: 1 } ],</span>
<span class="token comment">//   2: List [ Map{ &quot;v&quot;: 2 } ],</span>
<span class="token comment">// }</span>
</code></pre></div><h3 id="\u67E5\u627E\u6570\u636E-indexof-\u3001-lastindexof" tabindex="-1">\u67E5\u627E\u6570\u636E indexOf() \u3001 lastIndexOf <a class="header-anchor" href="#\u67E5\u627E\u6570\u636E-indexof-\u3001-lastindexof" aria-hidden="true">#</a></h3><p>Map\u4E0D\u5B58\u5728\u6B64\u65B9\u6CD5 \u4F5C\u7528\uFF1A\u548Cjs\u6570\u7EC4\u4E2D\u7684\u65B9\u6CD5\u76F8\u540C\uFF0C\u67E5\u627E\u7B2C\u4E00\u4E2A\u6216\u8005\u6700\u540E\u4E00\u4E2Avalue\u7684index\u503C\uFF0C\u627E\u4E0D\u5230\u5219\u8FD4\u56DE-1</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexof</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//2</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastIndexof</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">//2</span>
</code></pre></div><h3 id="findindex-\u3001-findlastindex" tabindex="-1">findIndex() \u3001 findLastIndex() <a class="header-anchor" href="#findindex-\u3001-findlastindex" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1AMap\u4E0D\u5B58\u5728\u6B64\u65B9\u6CD5\uFF0C\u67E5\u627E\u6EE1\u8DB3\u8981\u6C42\u7684\u5143\u7D20\u7684index\u503C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token comment">// 1</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findLastIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> index<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 3</span>
</code></pre></div><h3 id="find-\u3001-findlast" tabindex="-1">find() \u3001 findLast() <a class="header-anchor" href="#find-\u3001-findlast" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u67E5\u627E\u6EE1\u8DB3\u6761\u4EF6\u7684\u5143\u7D20\u7684value\u503C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 2</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findLast</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 4</span>
</code></pre></div><h3 id="findkey-\u3001-findlastkey" tabindex="-1">findKey() \u3001 findLastKey() <a class="header-anchor" href="#findkey-\u3001-findlastkey" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u67E5\u627E\u6EE1\u8DB3\u6761\u4EF6\u7684\u5143\u7D20\u7684key\u503C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findKey</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 1</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findLastKey</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// 3</span>
</code></pre></div><h3 id="findentry-\u3001-findlastentry" tabindex="-1">findEntry() \u3001 findLastEntry() <a class="header-anchor" href="#findentry-\u3001-findlastentry" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u67E5\u627E\u6EE1\u8DB3\u6761\u4EF6\u7684\u5143\u7D20\u7684\u952E\u503C\u5BF9 key:value</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findEntry</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// [1,2]</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findLastEntry</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// [3,4]</span>
</code></pre></div><h3 id="keyof-lastkeyof" tabindex="-1">keyOf() lastKeyOf() <a class="header-anchor" href="#keyof-lastkeyof" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u67E5\u627E\u67D0\u4E00\u4E2Avalue\u5BF9\u5E94\u7684key\u503C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keyOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//1</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lastKeyOf</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">//1</span>
</code></pre></div><h3 id="max-\u3001-maxby" tabindex="-1">max() \u3001 maxBy() <a class="header-anchor" href="#max-\u3001-maxby" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u67E5\u627E\u6700\u5927\u503C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//4</span>

Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span>a<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>array</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">//{a:4}</span>
</code></pre></div><h3 id="min-\u3001-minby" tabindex="-1">min() \u3001 minBy() <a class="header-anchor" href="#min-\u3001-minby" aria-hidden="true">#</a></h3><p>\u53C2\u8003max\u7528\u6CD5\uFF1B</p><h3 id="\u521B\u5EFA\u5B50\u96C6-slice" tabindex="-1">\u521B\u5EFA\u5B50\u96C6 slice() <a class="header-anchor" href="#\u521B\u5EFA\u5B50\u96C6-slice" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u548C\u539F\u751Fjs\u4E2D\u6570\u7EC4\u7684slice\u6570\u7EC4\u4E00\u6837\uFF0C\u5305\u542B\u4E24\u4E2A\u53C2\u6570\uFF0Cstart\u548Cend\uFF0C</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2,3,4]</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2]</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[3,4]</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2]</span>
</code></pre></div><h3 id="rest" tabindex="-1">rest() <a class="header-anchor" href="#rest" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E4B\u5916\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//[2,3,4]</span>
</code></pre></div><h3 id="butlast" tabindex="-1">butLast() <a class="header-anchor" href="#butlast" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E4B\u5916\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//[1,2,3]</span>
</code></pre></div><h3 id="skip" tabindex="-1">skip() <a class="header-anchor" href="#skip" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u6709\u4E00\u4E2A\u53C2\u6570n, \u8FD4\u56DE\u622A\u6389\u524Dn\u4E2A\u5143\u7D20\u4E4B\u540E\u5269\u4E0B\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//[2,3,4]</span>
</code></pre></div><h3 id="skiplast" tabindex="-1">skipLast() <a class="header-anchor" href="#skiplast" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u6709\u4E00\u4E2A\u53C2\u6570n, \u8FD4\u56DE\u622A\u6389\u6700\u540En\u4E2A\u5143\u7D20\u4E4B\u540E\u5269\u4E0B\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//[1,2,3]</span>
</code></pre></div><h3 id="skipwhile" tabindex="-1">skipWhile() <a class="header-anchor" href="#skipwhile" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u4ECE\u7B2C\u4E00\u6B21\u8FD4\u56DEfalse\u4E4B\u540E\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// [1,2,3,4]</span>
</code></pre></div><h3 id="skipuntil" tabindex="-1">skipUntil() <a class="header-anchor" href="#skipuntil" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u4ECE\u7B2C\u4E00\u6B21\u8FD4\u56DEtrue\u4E4B\u540E\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skipUntil</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// [3,4]</span>
</code></pre></div><h3 id="take" tabindex="-1">take() <a class="header-anchor" href="#take" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u6709\u4E00\u4E2A\u53C2\u6570n, \u8FD4\u56DE\u524Dn\u4E2A\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//[1,2]</span>
</code></pre></div><h3 id="takelast" tabindex="-1">takeLast() <a class="header-anchor" href="#takelast" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u6709\u4E00\u4E2A\u53C2\u6570n, \u8FD4\u56DE\u6700\u540En\u4E2A\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">takeLast</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">//[3,4]</span>
</code></pre></div><h3 id="takewhile" tabindex="-1">takeWhile() <a class="header-anchor" href="#takewhile" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u4ECE\u7B2C\u4E00\u6B21\u8FD4\u56DEfalse\u4E4B\u524D\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skipWhile</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">takeWhile</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// []</span>
</code></pre></div><h3 id="takeuntil" tabindex="-1">takeUntil() <a class="header-anchor" href="#takeuntil" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u4ECE\u7B2C\u4E00\u6B21\u8FD4\u56DEtrue\u4E4B\u524D\u7684\u6240\u6709\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skipUntil</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">takeUntil</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">// [1,2]</span>
</code></pre></div><h3 id="\u5904\u7406\u6570\u636E-reduce" tabindex="-1">\u5904\u7406\u6570\u636E reduce() <a class="header-anchor" href="#\u5904\u7406\u6570\u636E-reduce" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u548Cjs\u4E2D\u6570\u7EC4\u4E2D\u7684reduce\u76F8\u540C,\u6309\u7D22\u5F15\u5347\u5E8F\u7684\u987A\u5E8F\u5904\u7406\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>next<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pre<span class="token operator">+</span>next<span class="token punctuation">)</span>
  <span class="token keyword">return</span> pre<span class="token operator">+</span>next<span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 3 6 10</span>
</code></pre></div><h3 id="reduceright" tabindex="-1">reduceRight() <a class="header-anchor" href="#reduceright" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u548Cjs\u4E2D\u6570\u7EC4\u4E2D\u7684reduce\u76F8\u540C,\u6309\u7D22\u5F15\u964D\u5E8F\u7684\u987A\u5E8F\u5904\u7406\u5143\u7D20</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduceRight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span>next<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pre<span class="token operator">+</span>next<span class="token punctuation">)</span>
  <span class="token keyword">return</span> pre<span class="token operator">+</span>next<span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 7 9 10</span>
</code></pre></div><h3 id="every" tabindex="-1">every() <a class="header-anchor" href="#every" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u6574\u4E2A\u5BF9\u8C61\u603B\u4E2D\u6240\u6709\u7684\u5143\u7D20\u662F\u4E0D\u662F\u90FD\u6EE1\u8DB3\u67D0\u4E00\u4E2A\u6761\u4EF6\uFF0C\u90FD\u6EE1\u8DB3\u8FD4\u56DEtrue\uFF0C\u53CD\u4E4B\u8FD4\u56DEfalse\u3002</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="some" tabindex="-1">some() <a class="header-anchor" href="#some" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u6574\u4E2A\u5BF9\u8C61\u603B\u4E2D\u6240\u6709\u7684\u5143\u7D20\u662F\u4E0D\u662F\u5B58\u5728\u6EE1\u8DB3\u67D0\u4E00\u4E2A\u6761\u4EF6\u7684\u5143\u7D20\uFF0C\u82E5\u5B58\u5728\u8FD4\u56DEtrue\uFF0C\u53CD\u4E4B\u8FD4\u56DEfalse\u3002</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="join" tabindex="-1">join() <a class="header-anchor" href="#join" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u540Cjs\u4E2D\u6570\u7EC4\u7684join\u65B9\u6CD5\u3002\u628A\u51C6\u6362\u4E3A\u5B57\u7B26\u4E32</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token comment">//1,2,3,4</span>
</code></pre></div><h3 id="isempty" tabindex="-1">isEmpty() <a class="header-anchor" href="#isempty" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u5224\u65AD\u662F\u5426\u4E3A\u7A7A</p><div class="language-js"><pre><code>Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="count" tabindex="-1">count() <a class="header-anchor" href="#count" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u8FD4\u56DE\u5143\u7D20\u4E2A\u6570\uFF0C\u53EF\u81EA\u5B9A\u4E49\u6761\u4EF6\uFF0C\u8FD4\u56DE\u6EE1\u8DB3\u6761\u4EF6\u7684\u4E2A\u6570</p><div class="language-js"><pre><code><span class="token keyword">const</span> list <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> map <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

list<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">//2</span>

map<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token comment">//2</span>
</code></pre></div><h3 id="countby" tabindex="-1">countBy() <a class="header-anchor" href="#countby" aria-hidden="true">#</a></h3><p>\u4F5C\u7528\uFF1A\u4E0Ecount\u4E0D\u540C\u7684\u662F\uFF0CcountBy\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</p><div class="language-js"><pre><code><span class="token keyword">const</span> list <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> map <span class="token operator">=</span> Immutable<span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">b</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token literal-property property">d</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

list<span class="token punctuation">.</span><span class="token function">countBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//{false: 2, true: 2}</span>

map<span class="token punctuation">.</span><span class="token function">countBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span>index<span class="token punctuation">,</span>list</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> value <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//{false: 2, true: 2}</span>
</code></pre></div>`,173),e=[o];function c(u,l,k,i,r,m){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{b as __pageData,f as default};
