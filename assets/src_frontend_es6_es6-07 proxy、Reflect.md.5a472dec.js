import{_ as n,c as s,o as a,d as t}from"./app.7277c524.js";const g='{"title":"es6-07 proxy\u3001Reflect","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4E00\u3001proxy","slug":"\u4E00\u3001proxy"},{"level":3,"title":"\u4EE3\u7406","slug":"\u4EE3\u7406"},{"level":3,"title":"proxy\u652F\u6301\u7684\u6240\u6709\u64CD\u4F5C","slug":"proxy\u652F\u6301\u7684\u6240\u6709\u64CD\u4F5C"},{"level":3,"title":"Proxy\u5B9E\u4F8B\u7684\u65B9\u6CD5","slug":"proxy\u5B9E\u4F8B\u7684\u65B9\u6CD5"},{"level":2,"title":"\u4E8C\u3001Reflect","slug":"\u4E8C\u3001reflect"},{"level":3,"title":"\u6982\u8FF0","slug":"\u6982\u8FF0"},{"level":3,"title":"Reflect\u7684\u9759\u6001\u65B9\u6CD5","slug":"reflect\u7684\u9759\u6001\u65B9\u6CD5"},{"level":3,"title":"get(target,name,receiver)","slug":"get-target-name-receiver"},{"level":3,"title":"set(target,name,value,receiver)","slug":"set-target-name-value-receiver"},{"level":3,"title":"construct(target,args)","slug":"construct-target-args"},{"level":3,"title":"apply(func,thisArg,args)","slug":"apply-func-thisarg-args"},{"level":3,"title":"ownKeys(target)","slug":"ownkeys-target"}],"relativePath":"src/frontend/es6/es6-07 proxy\u3001Reflect.md","lastUpdated":1649840977570}',p={},e=t(`<h1 id="es6-07-proxy\u3001reflect" tabindex="-1">es6-07 proxy\u3001Reflect <a class="header-anchor" href="#es6-07-proxy\u3001reflect" aria-hidden="true">#</a></h1><h2 id="\u4E00\u3001proxy" tabindex="-1">\u4E00\u3001proxy <a class="header-anchor" href="#\u4E00\u3001proxy" aria-hidden="true">#</a></h2><h3 id="\u4EE3\u7406" tabindex="-1">\u4EE3\u7406 <a class="header-anchor" href="#\u4EE3\u7406" aria-hidden="true">#</a></h3><blockquote><p>\u53EF\u4EE5\u4FEE\u6539\u5BF9\u8C61\u7684\u539F\u64CD\u4F5C\uFF1B</p></blockquote><p>proxy\u7684\u4E24\u4E2A\u53C2\u6570\uFF0C\u90FD\u662F\u5BF9\u8C61\uFF0C\u7B2C\u4E00\u4E2A\u662F\u8981\u4EE3\u7406\u7684\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u5BF9\u8C61\u7684\u6240\u5C5E\u64CD\u4F5C</p><div class="language-js"><pre><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre></div><h4 id="\u4EE3\u7406\u5BF9\u8C61" tabindex="-1">\u4EE3\u7406\u5BF9\u8C61 <a class="header-anchor" href="#\u4EE3\u7406\u5BF9\u8C61" aria-hidden="true">#</a></h4><p><code>target</code>\u4E3A\u4EE3\u7406\u7684\u5BF9\u8C61\uFF0C<code>key</code>\u4E3A\u83B7\u53D6\u7684\u5C5E\u6027\uFF0C<code>receiver</code>\u6307\u5411\u521B\u5EFA\u7684\u8FD9\u4E2Aproxy\uFF0C\u5982\u679C\u8F93\u51FA<code>receiver</code>\u4F1A\u8FDB\u884C\u53D6\u503C\u64CD\u4F5C\uFF0C\u4F1A\u9020\u6210\u6B7B\u5FAA\u73AF\uFF1B</p><div class="language-js"><pre><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span>key<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u8C03\u7528Reflect\u7684get\u65B9\u6CD5\u5B8C\u6210\u9ED8\u8BA4\u884C\u4E3A</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="\u4EE3\u7406\u51FD\u6570" tabindex="-1">\u4EE3\u7406\u51FD\u6570 <a class="header-anchor" href="#\u4EE3\u7406\u51FD\u6570" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;prototype&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello, &#39;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisBinding<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// args\u4E3A\u6570\u7EC4, \u9700\u8981\u53D60</span>
    <span class="token keyword">return</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">construct</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> fproxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> 
  handler
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token keyword">new</span> <span class="token class-name">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// {value: 2}</span>
fproxy<span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype <span class="token comment">// true</span>
fproxy<span class="token punctuation">.</span>foo <span class="token operator">===</span> <span class="token string">&quot;Hello, foo&quot;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="proxy\u652F\u6301\u7684\u6240\u6709\u64CD\u4F5C" tabindex="-1">proxy\u652F\u6301\u7684\u6240\u6709\u64CD\u4F5C <a class="header-anchor" href="#proxy\u652F\u6301\u7684\u6240\u6709\u64CD\u4F5C" aria-hidden="true">#</a></h3><ul><li><code>get(target,key,receiver)</code>\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6\uFF0C\u6BD4\u5982\uFF1Aproxy.foo\u548Cproxy[&#39;foo&#39;]</li><li><code>set(target,key,receiver)</code>\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBE\u7F6E\uFF0C\u6BD4\u5982\uFF1Aproxy.foo=v\u6216proxy[&#39;foo&#39;] = v\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>has(target,key)</code>\uFF1A\u62E6\u622Akey in proxy\u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>deleteProperty(target,key)</code>\uFF1A\u62E6\u622Adelete proxy[key]\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>ownKeys(target)</code>\uFF1A\u62E6\u622AObject.getOwnpropertyNames(proxy)\u3001Object.getOwnPropertySymbols(proxy)\u3001Object.keys(proxy)\u3001for...in\u5FAA\u73AF\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u6240\u6709\u81EA\u8EAB\u7684\u5C5E\u6027\u7684\u5C5E\u6027\u540D\uFF0C\u800CObject.keys()\u8FD4\u56DE\u7ED3\u679C\u4EC5\u5305\u62EC\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u904D\u5386\u5C5E\u6027</li><li><code>getOwnPropertyDescriptor(target,key)</code>\uFF1A\u62E6\u622AObject.getOwnPropertyDescriptor(proxy,key)\uFF1A\u8FD4\u56DE\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61</li><li><code>defineProperty(target,key,desc)</code>\uFF1A\u62E6\u622AObject.defineProperty(proxy,key,desc)\u3001Object.defineProperties(proxy,desc)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>preventExtensions(target)</code>\uFF1A\u62E6\u622AObject.preventExtensions(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>getPrototypeOf(target)</code>\uFF1A\u62E6\u622AObject.getPrototypeOf(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</li><li><code>isExtensible(target)</code>\uFF1A\u62E6\u622AObject.isExtensible(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li><code>setPropotypeOf(target,proto)</code>\uFF1A\u62E6\u622AObject.setPrototypeOf(proxy,proto)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u662F\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD8\u6709\u4E24\u79CD\u989D\u5916\u64CD\u4F5C\u53EF\u4EE5\u62E6\u622A</li><li><code>apply(target, object,args)</code>\uFF1A\u62E6\u622Aproxy\u5B9E\u4F8B\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982\uFF1Aproxy(...args)\u3001proxy.call(object,...args)\u3001proxy.apply(...)</li><li><code>construct(target,args)</code>\uFF1A\u62E6\u622AProxy\u5B9E\u4F8B\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982new proxy(...args)\uFF1B</li></ul><h3 id="proxy\u5B9E\u4F8B\u7684\u65B9\u6CD5" tabindex="-1">Proxy\u5B9E\u4F8B\u7684\u65B9\u6CD5 <a class="header-anchor" href="#proxy\u5B9E\u4F8B\u7684\u65B9\u6CD5" aria-hidden="true">#</a></h3><ol><li><p><code>get()</code></p><p>get\u65B9\u6CD5\u53EF\u4EE5\u7EE7\u627F\uFF0C\u4E0D\u9700\u8981\u518D\u9012\u5F52\u4EE3\u7406\u4E86</p><div class="language-js"><pre><code><span class="token keyword">let</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span> <span class="token operator">+</span> key<span class="token punctuation">)</span>
        <span class="token keyword">return</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span>
obj<span class="token punctuation">.</span>foo  <span class="token comment">// &#39;GET foo&#39;</span>
</code></pre></div></li><li><p><code>set()</code>\uFF0C\u62E6\u622A\u5BF9\u8C61\u7684\u8BBE\u7F6E\uFF0C\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\uFF0C\u5C5E\u6027\u540D\uFF0C\u5C5E\u6027\u503C\u548Cproxy\u5B9E\u4F8B\u672C\u8EAB\uFF0C\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009</p><p>\u4F8B\u5B50\uFF1A\u4E0D\u80FD\u8BBE\u7F6E\u5927\u4E8E200\u7684age\uFF1B</p><div class="language-js"><pre><code><span class="token keyword">let</span> validator <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span>prop<span class="token punctuation">,</span>value<span class="token punctuation">,</span>receiver</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&#39;The age seems invalid&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> validator<span class="token punctuation">)</span>
</code></pre></div></li><li><p><code>apply()</code></p><p>apply\u65B9\u6CD5\u62E6\u622A\u51FD\u6570\u7684\u8C03\u7528\u3001<code>call</code>\u548C<code>apply</code>\u7684\u64CD\u4F5C</p><p>apply\u63A5\u6536\u4E09\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\uFF0C\u76EE\u6807\u5BF9\u8C61\u7684\u4E0A\u4E0B\u6587\u5BF9\u8C61(this)\u548C\u76EE\u6807\u5BF9\u8C61\u7684\u53C2\u6570\u6570\u7EC4</p><div class="language-js"><pre><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F8B\u5B501\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">var</span> twice <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Reflect.apply\u6267\u884C\u4E86sum\u51FD\u6570\u7684\u7ED3\u679C\u5E76*2\u8FD4\u56DE;</span>
    <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> twice<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">proxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>   <span class="token comment">// 6</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>   <span class="token comment">// 22</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token comment">// 30</span>
\u76F4\u63A5\u8C03\u7528Reflect<span class="token punctuation">.</span>apply\u65B9\u6CD5\u4E5F\u4F1A\u88AB\u62E6\u622A

<span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p><code>has()</code></p><p>\u7528\u6765\u62E6\u622AhasProperty\u64CD\u4F5C\uFF0C\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u5178\u578B\u7684\u64CD\u4F5C\u5C31\u662Fin\u8FD0\u7B97\u7B26</p><p>\u4F8B\u5B50\uFF1A\u9690\u85CF&#39;_&#39;\u5F00\u5934\u7684\u5C5E\u6027\u4E0D\u88AB\u68C0\u6D4B\u5230</p><div class="language-js"><pre><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">get</span><span class="token operator">:</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span>key<span class="token punctuation">,</span>receiver<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> key <span class="token keyword">in</span> target
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">_prop</span><span class="token operator">:</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre></div></li><li><p><code>construct()</code></p><p>construct\u65B9\u6CD5\u7528\u4E8E\u62E6\u622Anew\u547D\u4EE4\uFF0C\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\uFF0C\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570\u5BF9\u8C61\uFF0C\u521B\u9020\u5B9E\u4F8B\u5BF9\u8C61\u65F6\uFF0Cnew\u547D\u4EE4\u4F5C\u7528\u7684\u6784\u9020\u51FD\u6570\uFF1B</p><div class="language-js"><pre><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">construct</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span>args<span class="token punctuation">,</span>newTarget</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">target</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>construct\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5426\u5219\u4F1A\u62A5\u9519</p></li></ol><p>\u4EE3\u7406\u4E00\u4E2A\u51FD\u6570\uFF0C\u652F\u6301\u70B9\u7684\u8C03\u7528\u65B9\u5F0F</p><div class="language-js"><pre><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> reciver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// property\u4E3A\u83B7\u53D6\u7684\u5C5E\u6027, msg\u4E3A\u8C03\u7528\u65F6\u4F20\u5165\u7684\u51FD\u6570</span>
            <span class="token function">_this</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> _this<span class="token punctuation">,</span> <span class="token punctuation">[</span>msg<span class="token punctuation">,</span> property<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisbing<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u5904\u7406\u903B\u8F91</span>
        <span class="token keyword">return</span> arg
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">proxy</span><span class="token punctuation">(</span><span class="token string">&#39;111&#39;</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;111&#39;]</span>
proxy<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&#39;111&#39;</span><span class="token punctuation">)</span> <span class="token comment">// [111, &#39;success&#39;]</span>
</code></pre></div><h2 id="\u4E8C\u3001reflect" tabindex="-1">\u4E8C\u3001Reflect <a class="header-anchor" href="#\u4E8C\u3001reflect" aria-hidden="true">#</a></h2><h3 id="\u6982\u8FF0" tabindex="-1">\u6982\u8FF0 <a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a></h3><p>\uFF081\uFF09Object\u4E0A\u7684\u660E\u663E\u5C5E\u6027\u8BED\u8A00\u5185\u90E8\u7684\u65B9\u6CD5\u90FD\u653E\u5230\u4E86Reflect\u5BF9\u8C61\u4E0A\uFF0C\u672A\u6765\u7684\u65B0\u65B9\u6CD5\u5C06\u53EA\u90E8\u7F72\u5728Reflect\u5BF9\u8C61\u4E0A</p><p>\uFF082\uFF09\u4FEE\u6539\u4E86\u67D0\u4E9BObject\u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8BA9\u5176\u53D8\u5F97\u5408\u7406\uFF0CObject\u5728\u65E0\u6CD5\u5B9A\u4E49\u5C5E\u6027\u65F6\uFF0C\u4F1A\u629B\u51FA\u4E00\u4E2A\u9519\u8BEF\uFF0C\u800CReflect\u53EA\u4F1A\u8FD4\u56DEfalse</p><div class="language-js"><pre><code><span class="token comment">// \u8001\u5199\u6CD5</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> property<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// success</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// failure</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\uFF083\uFF09\u8BA9Object\u64CD\u4F5C\u90FD\u53D8\u6210\u51FD\u6570\u884C\u4E3A</p><div class="language-js"><pre><code><span class="token comment">// \u8001\u5199\u6CD5</span>
<span class="token string">&#39;assign&#39;</span> <span class="token keyword">in</span> Object <span class="token comment">// true</span>
<span class="token comment">// \u65B0\u5199\u6CD5</span>
Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> <span class="token string">&#39;assign&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre></div><p>\uFF084\uFF09Reflect\u5BF9\u8C61\u7684\u65B9\u6CD5\u4E0EProxy\u5BF9\u8C61\u7684\u65B9\u6CD5\u4E00\u4E00\u5BF9\u5E94\uFF0C\u53EA\u8981\u662FProxy\u5BF9\u8C61\u7684\u65B9\u6CD5\u90FD\u80FD\u5728Reflect\u5BF9\u8C61\u4E0A\u627E\u5230\u5BF9\u5E94\u7684\u65B9\u6CD5\uFF0C\u8FD9\u5C31\u8BA9Proxy\u5BF9\u8C61\u53EF\u4EE5\u65B9\u4FBF\u5730\u8C03\u7528\u5BF9\u5E94\u7684Reflect\u65B9\u6CD5\uFF0C\u5B8C\u6210\u9ED8\u8BA4\u884C\u4E3A,\u53EF\u4EE5\u5728Reflect\u4E0A\u83B7\u53D6\u9ED8\u8BA4\u884C\u4E3A</p><div class="language-js"><pre><code><span class="token function">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> success <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> name<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;property &#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39; on &#39;</span> <span class="token operator">+</span> target <span class="token operator">+</span> <span class="token string">&#39; set to &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> success<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0Cproxy\u65B9\u6CD5\u62E6\u622Atarget\u5BF9\u8C61\u7684\u5C5E\u6027\u8D4B\u503C\u884C\u4E3A\uFF0C\u91C7\u7528Reflect.set\u65B9\u6CD5\u5C06\u503C\u8D4B\u503C\u7ED9\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u786E\u4FDD\u5B8C\u6210\u539F\u6709\u7684\u884C\u4E3A\uFF0C\u7136\u540E\u518D\u90E8\u7F72\u989D\u5916\u7684\u529F\u80FD</p><h3 id="reflect\u7684\u9759\u6001\u65B9\u6CD5" tabindex="-1">Reflect\u7684\u9759\u6001\u65B9\u6CD5 <a class="header-anchor" href="#reflect\u7684\u9759\u6001\u65B9\u6CD5" aria-hidden="true">#</a></h3><ul><li><code>apply(target,thisArg,args)</code></li><li><code>construct(target,args)</code></li><li><code>get(target,name,receiver)</code></li><li><code>set(target,name,value,receiver)</code></li><li><code>defineProperty(target,name,desc)</code></li><li><code>deleteProperty(target,name)</code></li><li><code>has(target,name)</code></li><li><code>ownKeys(target)</code></li><li><code>isExtensible(target)</code></li><li><code>preventExtensions(target)</code></li><li><code>getOwnPropertyDescriptor(target,name)</code></li><li><code>getPrototypeOf(target)</code></li><li><code>setPrototypeOf(target,prototype)</code></li></ul><h3 id="get-target-name-receiver" tabindex="-1">get(target,name,receiver) <a class="header-anchor" href="#get-target-name-receiver" aria-hidden="true">#</a></h3><p>\u67E5\u627Etarget\u5BF9\u8C61\u7684name\u5C5E\u6027\uFF0C\u5982\u679C\u6CA1\u6709\u8BE5\u5C5E\u6027\u8FD4\u56DEundefined</p><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 2</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre></div><p>\u5982\u679Cname\u5C5E\u6027\u90E8\u7F72\u4E86\u8BFB\u53D6\u51FD\u6570(getter)\uFF0C\u5219\u8BFB\u53D6\u51FD\u6570this\u7ED1\u5B9A\u5230receiver</p><div class="language-js"><pre><code><span class="token keyword">var</span> myReceiver <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">foo</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">}</span>
Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">,</span> myReceiver<span class="token punctuation">)</span>  <span class="token comment">// 8</span>
</code></pre></div><h3 id="set-target-name-value-receiver" tabindex="-1">set(target,name,value,receiver) <a class="header-anchor" href="#set-target-name-value-receiver" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">var</span> myObject <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> value
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>myObject<span class="token punctuation">,</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre></div><p>\u5982\u679Cset\u4F20\u5165receiver\uFF0C\u5219\u4F1A\u89E6\u53D1Proxy.defineProperty\u62E6\u622A\uFF0C\u5982\u679C\u4E0D\u4F20\u5165\u5C31\u4E0D\u4F1A\u62E6\u622A</p><div class="language-js"><pre><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;set&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;defineProperty&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Reflect<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> attribute<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// set</span>
<span class="token comment">// defineProperty</span>
</code></pre></div><h3 id="construct-target-args" tabindex="-1">construct(target,args) <a class="header-anchor" href="#construct-target-args" aria-hidden="true">#</a></h3><p>Reflect.construct\u65B9\u6CD5\u7B49\u540C\u4E8Enew target(...args), \u8FD9\u63D0\u4F9B\u4E86\u4E00\u79CD\u4E0D\u4F7F\u7528new, \u6765\u8C03\u7528\u6784\u9020\u51FD\u6570\u7684\u65B9\u6CD5</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">Greeting</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
<span class="token punctuation">}</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Greeting</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">construct</span><span class="token punctuation">(</span>Greeting<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;\u5F20\u4E09&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E0D\u662F\u51FD\u6570\uFF0C\u5219\u62A5\u9519</p><h3 id="apply-func-thisarg-args" tabindex="-1">apply(func,thisArg,args) <a class="header-anchor" href="#apply-func-thisarg-args" aria-hidden="true">#</a></h3><p>\u65B9\u6CD5\u7B49\u540C\u4E8E<code>Function.prototype.apply.call(func,thisArg,args)</code>,\u7528\u4E8E\u7ED1\u5B9Athis\u5BF9\u8C61\u540E\u6267\u884C\u7ED9\u5B9A\u51FD\u6570\uFF0C</p><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u5982\u679C\u8981\u7ED1\u5B9A\u4E00\u4E2A\u51FD\u6570\u7684this\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199<code>fn.apply(obj, args)</code>\uFF0C\u4F46\u662F\u5982\u679C\u51FD\u6570\u5B9A\u4E49\u4E86\u81EA\u5DF1\u7684apply\u65B9\u6CD5\uFF0C\u5C31\u53EA\u80FD\u5199\u6210<code>Function.prototype.apply.call(fn, obj, args)</code>\uFF0C\u91C7\u7528Reflect\u5BF9\u8C61\u53EF\u4EE5\u7B80 \u5316\u8FD9\u79CD\u64CD\u4F5C\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> ages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E7\u5199\u6CD5</span>
<span class="token keyword">const</span> youngest <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> oldest <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>youngest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65B0\u5199\u6CD5</span>
<span class="token keyword">const</span> youngest <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>min<span class="token punctuation">,</span> Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> oldest <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>max<span class="token punctuation">,</span> Math<span class="token punctuation">,</span> ages<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">,</span> youngest<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="ownkeys-target" tabindex="-1">ownKeys(target) <a class="header-anchor" href="#ownkeys-target" aria-hidden="true">#</a></h3><p>\u65B9\u6CD5\u7528\u4E8E\u8FD4\u56DE\u5BF9\u8C61\u7684\u6240\u6709\u5C5E\u6027\uFF0C\u7B49\u540C\u4E8EObject.getOwnPropertyNames\u4E0EObject.getOwnPropertySymbols\u4E4B\u548C\uFF0C\u53EF\u4EE5\u8FD4\u56DESymbol</p><div class="language-js"><pre><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hhh&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// [&#39;name&#39;,&#39;age&#39;]</span>
Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span> <span class="token comment">// [&#39;length&#39;,&#39;name&#39;,&#39;prototype&#39;]</span>
Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span> <span class="token comment">// []</span>
</code></pre></div>`,49),o=[e];function c(l,u,r,k,i,d){return a(),s("div",null,o)}var f=n(p,[["render",c]]);export{g as __pageData,f as default};
