import{_ as n,c as s,o as a,d as p}from"./app.7277c524.js";const g='{"title":"TS-05 \u9AD8\u7EA7\u7C7B\u578B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4EA4\u53C9\u7C7B\u578B","slug":"\u4EA4\u53C9\u7C7B\u578B"},{"level":2,"title":"\u8054\u5408\u7C7B\u578B","slug":"\u8054\u5408\u7C7B\u578B"},{"level":2,"title":"\u7C7B\u578B\u4FDD\u62A4","slug":"\u7C7B\u578B\u4FDD\u62A4"},{"level":2,"title":"\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B","slug":"\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B"},{"level":2,"title":"\u7C7B\u578B\u65AD\u8A00","slug":"\u7C7B\u578B\u65AD\u8A00"},{"level":2,"title":"\u7C7B\u578B\u522B\u540D","slug":"\u7C7B\u578B\u522B\u540D"},{"level":2,"title":"\u5B57\u9762\u91CF\u7C7B\u578B","slug":"\u5B57\u9762\u91CF\u7C7B\u578B"},{"level":2,"title":"\u53EF\u8FA8\u8BC6\u8054\u5408","slug":"\u53EF\u8FA8\u8BC6\u8054\u5408"},{"level":2,"title":"\u591A\u6001\u7684this \u7C7B\u578B","slug":"\u591A\u6001\u7684this-\u7C7B\u578B"},{"level":2,"title":"\u7D22\u5F15\u7C7B\u578B","slug":"\u7D22\u5F15\u7C7B\u578B"},{"level":2,"title":"\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B","slug":"\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B"},{"level":2,"title":"\u6620\u5C04\u7C7B\u578B","slug":"\u6620\u5C04\u7C7B\u578B"},{"level":2,"title":"\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD","slug":"\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD"},{"level":2,"title":"\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26","slug":"\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26"},{"level":2,"title":"\u6761\u4EF6\u7C7B\u578B","slug":"\u6761\u4EF6\u7C7B\u578B"},{"level":2,"title":"\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B","slug":"\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B"},{"level":2,"title":"\u6761\u4EF6\u7C7B\u578B\u7684\u7C7B\u578B\u63A8\u65AD","slug":"\u6761\u4EF6\u7C7B\u578B\u7684\u7C7B\u578B\u63A8\u65AD"},{"level":2,"title":"\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B","slug":"\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B"}],"relativePath":"src/frontend/Typescript/ts-05 \u9AD8\u7EA7\u7C7B\u578B.md","lastUpdated":1649840977556}',t={},o=p(`<h1 id="ts-05-\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1">TS-05 \u9AD8\u7EA7\u7C7B\u578B <a class="header-anchor" href="#ts-05-\u9AD8\u7EA7\u7C7B\u578B" aria-hidden="true">#</a></h1><h2 id="\u4EA4\u53C9\u7C7B\u578B" tabindex="-1">\u4EA4\u53C9\u7C7B\u578B <a class="header-anchor" href="#\u4EA4\u53C9\u7C7B\u578B" aria-hidden="true">#</a></h2><blockquote><p>\u4F7F\u7528&amp;\u7B26\u53F7\u5B9A\u4E49\u4EA4\u53C9\u7C7B\u578B\uFF0C\u4E5F\u53EF\u4EE5\u53EB\u505A\u4E0E\u7684\u64CD\u4F5C</p></blockquote><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u7EC4\u5408\u4E24\u4E2A\u5BF9\u8C61\uFF0C\u5F53<strong>\u7EC4\u5408\u4E24\u4E2A\u5BF9\u8C61</strong>\u65F6\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528&amp;\u7684\u64CD\u4F5C</p><div class="language-ts"><pre><code><span class="token keyword">const</span> mergeFunc <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> arg2<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span> <span class="token comment">// \u4F7F\u7528\u7C7B\u578B\u65AD\u8A00</span>
    res <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>arg1<span class="token punctuation">,</span> arg2<span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
<span class="token function">mergeFunc</span><span class="token punctuation">(</span><span class="token punctuation">{</span>a<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>b<span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u8054\u5408\u7C7B\u578B" tabindex="-1">\u8054\u5408\u7C7B\u578B <a class="header-anchor" href="#\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a></h2><blockquote><p>\u4F7F\u7528|\u7B26\u53F7\u5B9A\u4E49\u8054\u5408\u7C7B\u578B</p></blockquote><p><code>type1 | type2 | type3</code> \u5373\u53EF\u4EE5\u662F<code>type1</code>\u4E5F\u53EF\u4EE5\u662F<code>type2</code>\u6216\u8005<code>type3</code></p><h2 id="\u7C7B\u578B\u4FDD\u62A4" tabindex="-1">\u7C7B\u578B\u4FDD\u62A4 <a class="header-anchor" href="#\u7C7B\u578B\u4FDD\u62A4" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">const</span> valueList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> <span class="token function-variable function">getRandomValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token builtin">number</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">return</span> valueList<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">else</span> <span class="token keyword">return</span> valueList<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> val <span class="token operator">=</span> <span class="token function">getRandomValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u7531\u4E8E\u4EE5\u4E0A\u4F1A\u8FD4\u56DE\u4E24\u79CD\u7C7B\u578B\uFF0C\u56E0\u6B64\u4E0B\u9762\u7684\u5224\u65AD\u4F1A\u51FA\u9519\uFF0C\u9700\u8981\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val <span class="token keyword">as</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4F7F\u7528\u7C7B\u578B\u65AD\u8A00\u592A\u591A\uFF0C\u6BD4\u8F83\u9EBB\u70E6\uFF0C\u56E0\u6B64\u9700\u8981\u7C7B\u578B\u4FDD\u62A4</p><ul><li><p>\u7B2C\u4E00\u79CD\u7C7B\u578B\u4FDD\u62A4\uFF1A \u4F7F\u7528\u7C7B\u578B\u8C13\u8BCD\uFF0C\u8C13\u8BCD\u4E3A<code>parameterName is Type</code>\u8FD9\u79CD\u5F62\u5F0F</p><div class="language-ts"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> value <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E4B\u540E\u518D\u8FDB\u884C\u5224\u65AD</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u4E3Atrue\u5219\u8BE5\u4EE3\u7801\u5757\u7684\u7C7B\u578B\u90FD\u662Fstring\u7C7B\u578B\u7684</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>\u7B2C\u4E8C\u79CD\u7C7B\u578B\u4FDD\u62A4\uFF1A <code>typeof</code></p><div class="language-ts"><pre><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>typeof\u5728ts\u4E2D\u4F5C\u4E3A\u7C7B\u578B\u4FDD\u62A4\uFF0C\u4F7F\u7528\u9700\u8981\u6CE8\u610F\u4EE5\u4E0B\u51E0\u70B9\uFF1A</p><ul><li>\u53EA\u80FD\u662F\u5168\u7B49\u6216\u8005\u5168\u4E0D\u7B49\u64CD\u4F5C\u7B26\uFF0C\u4E0D\u80FD\u4F7F\u7528<code>includes</code>\u6765\uFF0C\u5982\uFF1A<code>(typeof item).includes(&#39;string&#39;)</code>\u662F\u9519\u8BEF\u7684</li><li>\u53EA\u80FD\u662F\u4EE5\u4E0B\u56DB\u79CD\u4E2D\u7684\u4E00\u79CD\uFF1A<code>string</code>\u3001<code>number</code>\u3001<code>boolean</code>\u3001<code>symbol</code></li></ul></li><li><p>\u7B2C\u4E09\u79CD\u7C7B\u578B\u4FDD\u62A4\uFF0C<code>instanceof</code> \u7528\u4E0E\u68C0\u6D4B\u662F\u5426\u662F\u67D0\u4E2A\u7C7B\u7684\u5B9E\u4F8B</p></li></ul><h2 id="\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B" tabindex="-1">\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B <a class="header-anchor" href="#\u53EF\u4EE5\u4E3Anull\u7684\u7C7B\u578B" aria-hidden="true">#</a></h2><p>TS\u5177\u6709\u4E24\u79CD\u7279\u6B8A\u7C7B\u578B\uFF1A<code>null</code>\u548C<code>undefined</code>\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u7C7B\u578B\u68C0\u67E5\u5668\u4F1A\u81EA\u52A8\u8D4B\u503C<code>null</code>\u6216\u8005<code>undefined</code>\uFF0C\u5F53\u5F00\u542F<code>--strictNullChecks</code>\u6807\u8BB0\u65F6\uFF0C\u5F53\u58F0\u660E\u53D8\u91CF\uFF0C\u4E0D\u4F1A\u518D\u81EA\u52A8\u8D4B\u503C<code>null</code>\u6216\u8005<code>undefined</code>\uFF0C\u9700\u8981\u624B\u52A8\u8D4B\u503C\u4E86\uFF1B</p><div class="language-ts"><pre><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>
s <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u62A5\u9519</span>

<span class="token keyword">let</span> sn<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token string">&#39;foot&#39;</span>
sn <span class="token operator">=</span> <span class="token keyword">null</span>
sn <span class="token operator">=</span> <span class="token keyword">undefined</span> <span class="token comment">// \u62A5\u9519, \u6CA1\u6709undefined</span>
</code></pre></div><p><strong>\u6CE8\u610F\uFF1A</strong> TypeScript\u4F1A\u628A<code>null</code>\u548C<code>undefined</code>\u533A\u522B\u5BF9\u5F85\uFF0C<code>string | null</code> \uFF0C <code>string | undefined</code>\uFF0C <code>string | null | undefined</code>\u4E09\u79CD\u662F\u4E0D\u540C\u7684\u7C7B\u578B</p><h2 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1">\u7C7B\u578B\u65AD\u8A00 <a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a></h2><blockquote><p>\u4F7F\u7528!\u6765\u8FDB\u884C\u7C7B\u578B\u65AD\u8A00</p></blockquote><p>\u4F7F\u7528<code>!</code>\u65AD\u8A00\u7684\u60C5\u51B5\u4E3A<code>undefined</code>\u7684\u60C5\u51B5\uFF0C\u58F0\u660E\u4E00\u4E2A\u503C\u4E0D\u8D4B\u521D\u59CB\u503C</p><div class="language-ts"><pre><code><span class="token keyword">const</span> getLength <span class="token operator">=</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">getRes</span><span class="token punctuation">(</span>prefix<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8FD9\u91CC\u4F7F\u7528!\u6765\u7C7B\u578B\u65AD\u8A00\uFF0C\u56E0\u4E3Anum\u53EF\u80FD\u4E3Aundefined</span>
        <span class="token keyword">return</span> prefix <span class="token operator">+</span> num<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    num <span class="token operator">=</span> num <span class="token operator">||</span> <span class="token number">0.1</span>
    <span class="token keyword">return</span> <span class="token function">getRes</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u7C7B\u578B\u522B\u540D" tabindex="-1">\u7C7B\u578B\u522B\u540D <a class="header-anchor" href="#\u7C7B\u578B\u522B\u540D" aria-hidden="true">#</a></h2><blockquote><p>\u7C7B\u578B\u522B\u540D\u53EA\u662F\u4E3A\u7C7B\u578B\u8D77\u4E86\u4E00\u4E2A\u540D\u5B57\uFF0C\u76F8\u5F53\u4E8Ejs\u4E2D\u7684\u8D4B\u503C</p></blockquote><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">TypeString</span> <span class="token operator">=</span> <span class="token builtin">string</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> TypeString <span class="token operator">=</span> <span class="token string">&#39;str&#39;</span> <span class="token comment">// \u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u7C7B\u578B\u522B\u540D\u4E86</span>
</code></pre></div><p>\u5BF9\u8C61\u522B\u540D\u53EA\u80FD\u5728\u5C5E\u6027\u4E2D\u5F15\u7528\u81EA\u8EAB\uFF0C\u4E0D\u80FD\u5728\u5176\u4ED6\u5730\u65B9\u4F7F\u7528\u81EA\u8EAB</p><div class="language-ts"><pre><code><span class="token comment">// \u5D4C\u5957\u4F8B\u5B50, \u5728\u5BF9\u8C61\u4E2D\u5F15\u7528\u81EA\u8EAB</span>
<span class="token keyword">type</span> <span class="token class-name">Childs<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
	current<span class="token operator">:</span> <span class="token constant">T</span>
	child<span class="token operator">?</span><span class="token operator">:</span> Childs<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u9519\u8BEF\u5F15\u7528\u4F8B\u5B50</span>
<span class="token keyword">type</span> <span class="token class-name">Childs</span> <span class="token operator">=</span> Childs<span class="token punctuation">[</span><span class="token punctuation">]</span>
</code></pre></div><p><strong>\u6CE8\u610F\uFF1A</strong> \u5F53\u63A5\u53E3\u5B9A\u4E49\u522B\u540D\u65F6\uFF0C\u4E0D\u80FD\u4F7F\u7528<code>extends</code>\u548C<code>implements</code>\uFF0C\u56E0\u4E3A\u522B\u540D\u662F\u6CA1\u6709\u8FD9\u4E24\u4E2A\u5C5E\u6027\u7684\uFF0C\u53EA\u6709\u63A5\u53E3\u6709</p><p>\u5F53\u65E0\u6CD5\u901A\u8FC7\u63A5\u53E3\u5E76\u4E14\u9700\u8981\u4F7F\u7528\u8054\u5408\u7C7B\u578B\u6216\u8005\u5143\u7EC4\u7C7B\u578B\u65F6\uFF0C\u7528\u7C7B\u578B\u522B\u540D\uFF0C\u5F53\u9700\u8981\u4F7F\u7528<code>extends</code>\u548C<code>implements</code>\u65F6\u4F7F\u7528\u63A5\u53E3</p><h2 id="\u5B57\u9762\u91CF\u7C7B\u578B" tabindex="-1">\u5B57\u9762\u91CF\u7C7B\u578B <a class="header-anchor" href="#\u5B57\u9762\u91CF\u7C7B\u578B" aria-hidden="true">#</a></h2><ul><li>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Name</span> <span class="token operator">=</span> <span class="token string">&#39;Heny&#39;</span>
<span class="token keyword">let</span> str<span class="token operator">:</span> Name <span class="token operator">=</span> <span class="token string">&#39;Heny&#39;</span> <span class="token comment">// \u53EA\u80FD\u662F\u8FD9\u4E00\u79CD\u7C7B\u578B</span>

<span class="token keyword">type</span> <span class="token class-name">Direction</span> <span class="token operator">=</span> <span class="token string">&#39;north&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;east&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;south&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;west&#39;</span>
<span class="token keyword">function</span> <span class="token function">getDirectionFirstLetter</span><span class="token punctuation">(</span>direction<span class="token operator">:</span> Direction<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> direction<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token function">getDirectionFirstLetter</span><span class="token punctuation">(</span><span class="token string">&#39;north&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u53EA\u80FD\u662F\u56DB\u4E2A\u4E2D\u7684\u5176\u4E2D\u4E00\u4E2A,ts\u4F1A\u81EA\u52A8\u63D0\u793A\u6709\u54EA\u4E9B\uFF0C\u4EA4\u4E92\u6548\u679C\u5F88\u597D</span>
</code></pre></div><ul><li>\u6570\u5B57\u5B57\u9762\u91CF\u548C\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u540C\u7406\uFF1B</li></ul><h2 id="\u53EF\u8FA8\u8BC6\u8054\u5408" tabindex="-1">\u53EF\u8FA8\u8BC6\u8054\u5408 <a class="header-anchor" href="#\u53EF\u8FA8\u8BC6\u8054\u5408" aria-hidden="true">#</a></h2><p>\u5355\u4F8B\u7C7B\u578B\uFF1A\u6307\u7684\u662F\u679A\u4E3E\u6210\u5458\u7C7B\u578B\u6216\u8005\u5B57\u9762\u91CF\u7C7B\u578B</p><p>\u6211\u4EEC\u53EF\u4EE5\u628A\u5355\u4F8B\u7C7B\u578B\u3001\u8054\u5408\u7C7B\u578B\u3001\u7C7B\u578B\u4FDD\u62A4\u3001\u7C7B\u578B\u522B\u540D\u8FD9\u51E0\u79CD\u7C7B\u578B\u8FDB\u884C\u5408\u5E76\uFF0C\u6765\u521B\u5EFA\u53EF\u8FA8\u8BC6\u8054\u5408\u7C7B\u578B\u7684\u9AD8\u7EA7\u6A21\u5F0F\uFF0C\u4E5F\u53EF\u4EE5\u79F0\u4F5C<strong>\u6807\u7B7E\u8054\u5408</strong>\u548C<strong>\u4EE3\u6570\u6570\u636E\u7C7B\u578B</strong></p><p>\u4E09\u8981\u7D20\uFF1A</p><ol><li>\u5177\u6709\u666E\u901A\u7684\u5355\u4F8B\u7C7B\u578B\u5C5E\u6027</li><li>\u4E00\u4E2A\u7C7B\u578B\u522B\u540D\u5305\u542B\u4E86\u54EA\u4E9B\u7C7B\u578B\u7684\u8054\u5408</li><li>\u6B64\u5C5E\u6027\u4E0A\u7684\u7C7B\u578B\u4FDD\u62A4</li></ol><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Square</span><span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;square&#39;</span>
    size<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Rectangle</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;rectangle&#39;</span>
    height<span class="token operator">:</span> <span class="token builtin">number</span>
    width<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
    kind<span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span>
    radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Shape</span> <span class="token operator">=</span> Square <span class="token operator">|</span> Rectangle <span class="token operator">|</span> Circle
<span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;square&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size
        <span class="token keyword">case</span> <span class="token string">&#39;rectangle&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width
        <span class="token keyword">case</span> <span class="token string">&#39;circle&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span> <span class="token comment">// **\u8868\u793A\u5E73\u65B9</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u4E09\u4E2A\u63A5\u53E3\u7684<code>kind</code>\u5C31\u662F\u4E00\u4E2A\u5355\u4F8B\u7C7B\u578B\u5C5E\u6027\uFF0C\u79F0\u4E3A\u53EF\u8FA8\u8BC6\u7684\u5C5E\u6027\u6216\u8005\u6807\u7B7E\uFF0C\u7C7B\u578B\u522B\u540DShape\u5305\u542B\u4E86\u4E09\u4E2A\u7C7B\u578B\u7684\u8054\u5408\uFF0C\u5F53\u8D70\u5230switch\u4EE3\u7801\u91CC\u9762\u65F6\uFF0C\u4F1A\u81EA\u52A8\u5C06\u53EF\u4EE5\u8BBF\u95EE\u7684\u5C5E\u6027\u90FD\u5217\u4E3E\u51FA\u6765</p><ul><li>switch\u9057\u6F0F\u5224\u65AD\u6761\u4EF6\u5904\u7406\u65B9\u5F0F</li></ul><div class="language-ts"><pre><code><span class="token comment">// \u7B2C\u4E00\u79CD\uFF0C\u5F00\u542F--strictNullChecks\uFF0C\u5E76\u4E14\u6307\u5B9AgetArea\u8FD4\u56DE\u503C\u7C7B\u578B</span>

<span class="token comment">// \u7B2C\u4E8C\u79CD\u5B9A\u4E49\u4E00\u4E2A\u9519\u8BEF\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">asserNever</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">never</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Unexpected object: &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span>s<span class="token operator">:</span> Shape<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;square&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>size <span class="token operator">*</span> s<span class="token punctuation">.</span>size
        <span class="token keyword">case</span> <span class="token string">&#39;rectangle&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> s<span class="token punctuation">.</span>width
        <span class="token keyword">case</span> <span class="token string">&#39;circle&#39;</span><span class="token operator">:</span> <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> s<span class="token punctuation">.</span>radius <span class="token operator">**</span> <span class="token number">2</span> <span class="token comment">// **\u8868\u793A\u5E73\u65B9</span>
        <span class="token keyword">default</span><span class="token operator">:</span> <span class="token keyword">return</span> <span class="token function">asserNever</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u524D\u9762\u518D\u9057\u6F0F, \u5219\u4F1A\u62A5\u9519\u63D0\u793A</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u591A\u6001\u7684this-\u7C7B\u578B" tabindex="-1">\u591A\u6001\u7684this \u7C7B\u578B <a class="header-anchor" href="#\u591A\u6001\u7684this-\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u591A\u6001\u7684<code>this</code>\u7C7B\u578B\u8868\u793A\u7684\u662F\u67D0\u4E2A\u5305\u542B\u7C7B\u6216\u63A5\u53E3\u7684\u5B50\u7C7B\u578B\uFF0C\u5B83\u80FD\u5F88\u5BB9\u6613\u7684\u8868\u73B0\u8FDE\u8D2F\u63A5\u53E3\u95F4\u7684\u7EE7\u627F\uFF0C\u6BD4\u5982\u5728\u8BA1\u7B97\u5668\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5728\u6BCF\u4E2A\u64CD\u4F5C\u4E4B\u540E\u90FD\u8FD4\u56DE<code>this</code>\u7C7B\u578B\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token keyword">public</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token function">add</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+=</span> value
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token function">substract</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">-=</span> value
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> counter<span class="token operator">:</span> Counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">class</span> <span class="token class-name">PowCounter</span> <span class="token keyword">extends</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> count<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token function">pow</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">**</span> value
    <span class="token keyword">return</span> <span class="token keyword">this</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p<span class="token operator">:</span> PowCounter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PowCounter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substract</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u7D22\u5F15\u7C7B\u578B" tabindex="-1">\u7D22\u5F15\u7C7B\u578B <a class="header-anchor" href="#\u7D22\u5F15\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u4F7F\u7528<code>keyof</code>\u8FDE\u63A5\u7B26\uFF0C\u8FDE\u63A5\u4E00\u4E2A\u7C7B\u578B\uFF0C\u4E4B\u540E\u8FD4\u56DE\u7531\u8FD9\u4E2A\u7C7B\u578B\u7684<strong>\u6240\u6709<code>\u5C5E\u6027\u540D</code>\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</strong></p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> info<span class="token operator">:</span> <span class="token keyword">keyof</span> Info<span class="token punctuation">;</span> <span class="token comment">// info\u7684\u7C7B\u578B\u5C06\u53D8\u6210(name | age)\u7C7B\u578B\uFF1B</span>
</code></pre></div><p>\u51FD\u6570\u4F7F\u7528<code>keyof</code>\u8FDE\u63A5\u7B26\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getValue</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>o<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> names<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> names<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> o<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span>    
<span class="token punctuation">}</span>
<span class="token keyword">const</span> infoObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;hh&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token function">getValue</span><span class="token punctuation">(</span>infoObj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" tabindex="-1">\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B <a class="header-anchor" href="#\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u548C\u8BBF\u95EE\u5BF9\u8C61\u7684\u67D0\u4E2A\u5C5E\u6027\u503C\u662F\u4E00\u6837\u7684\uFF0C\u5728ts\u4E2D\u7528\u6765\u8BBF\u95EE\u67D0\u4E2A\u5C5E\u6027\u7684\u7C7B\u578B\uFF0C\u7528\u5728\u63A5\u53E3\u6DFB\u52A0<code>keyof</code>\u65F6\uFF0C\u4F1A\u8FD4<strong>\u56DE\u63A5\u53E3\u6240\u6709\u7684<code>\u7C7B\u578B</code>\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</strong></p><div class="language-ts"><pre><code><span class="token comment">// \u4F8B\u5B50\u4E00</span>
<span class="token keyword">interface</span> <span class="token class-name">Info2</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">NameT</span> <span class="token operator">=</span> Info2<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span> <span class="token comment">// NameT\u4E3Astring\u7C7B\u578B</span>

<span class="token comment">// \u4F8B\u5B50\u4E8C</span>
<span class="token keyword">interface</span> <span class="token class-name">Type</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>
    b<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    c<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    d<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    e<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    f<span class="token operator">:</span> object
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Test</span> <span class="token operator">=</span> Type<span class="token punctuation">[</span><span class="token keyword">keyof</span> Type<span class="token punctuation">]</span> <span class="token comment">// keyof Type\u5C06\u662F\u975Enever,undefined,null\u7684\u5176\u4ED6\u7C7B\u578B\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</span>
</code></pre></div><p>\u4F7F\u7528<code>[keyof T]</code>\u8BBF\u95EE\u7684\u662F\u63A5\u53E3\u7C7B\u578B\u4E2D\u4E0D\u4E3A<code>undefined</code>\u3001<code>null</code>\u3001<code>never</code>\u7C7B\u578B\u7EC4\u6210\u7684\u8054\u5408\u7C7B\u578B</p><h2 id="\u6620\u5C04\u7C7B\u578B" tabindex="-1">\u6620\u5C04\u7C7B\u578B <a class="header-anchor" href="#\u6620\u5C04\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u4F7F\u7528<code>in</code>\u8FDE\u63A5\u7B26\uFF0C<code>in</code>\u76F8\u5F53\u4E8E<code>for in</code>\u904D\u5386\u64CD\u4F5C\u7B26\uFF1B</p><p>\u5F53\u9700\u8981\u7ED9\u4E00\u4E2A\u63A5\u53E3\u91CC\u9762\u7684\u6240\u6709\u5C5E\u6027\u6DFB\u52A0<code>readonly</code>\u4FEE\u9970\u7B26\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528<code>in keyof</code>\u64CD\u4F5C\u7B26</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    size<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">ReadInfo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// P\u76F8\u5F53\u4E8E\u662FT\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027\u540D,T\u5C31\u662F\u63A5\u53E3\uFF0C\u4E0B\u9762\u53EF\u4EE5\u6DFB\u52A0\u53EF\u9009\u64CD\u4F5C\u7B26\u6216\u8005readonly\u4FEE\u9970\u7B26</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">ReadInfo1</span> <span class="token operator">=</span> ReadInfo<span class="token operator">&lt;</span>Info<span class="token operator">&gt;</span>
<span class="token comment">// ReadInfo\u7684\u7C7B\u578B\u5373\u662FInfo\u91CC\u9762\u7684\u6240\u6709\u5C5E\u6027\u4FEE\u6539\u4E3A\u53EA\u8BFB\u7684\u53EF\u9009\u4E09\u4E2A\u5C5E\u6027\u4E86;</span>
</code></pre></div><p>\u5728<code>TypeScript</code>\u4E2D\uFF0C\u7ED9\u63A5\u53E3\u7684\u6240\u6709\u5C5E\u6027\u6DFB\u52A0<code>readonly</code>\u4FEE\u9970\u7B26\u548C\u53EF\u9009\u7684\u4FEE\u6539\u7B26\uFF0C\u4E00\u822C\u662F\u5E38\u7528\u7684\uFF0C<code>TypeScript</code>\u63D0\u4F9B\u4E86\u4E24\u4E2A\u5185\u7F6E\u6620\u5C04\u7C7B\u578B\uFF0C\u53EF\u4EE5\u76F4\u63A5\u62FF\u6765\u4F7F\u7528\uFF1B</p><p><code>Readonly</code> \u53EA\u8BFB\u6620\u5C04 \u548C <code>Partial</code>\u53EF\u9009\u6620\u5C04\uFF0C\u8FD9\u4E24\u4E2A\u90FD\u662F\u7ECF\u5E38\u4F7F\u7528\u7684\u6620\u5C04\u7C7B\u578B\uFF1B</p><p>\u57FA\u672C\u5B9E\u73B0\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Readonly<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u57FA\u672C\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">ReadInfo</span> <span class="token operator">=</span> Readonly<span class="token operator">&lt;</span>Info<span class="token operator">&gt;</span> <span class="token comment">// \u4F7F\u7528\u524D\u9762\u5B9A\u4E49\u7684Info\u63A5\u53E3</span>
<span class="token keyword">type</span> <span class="token class-name">PartialInfo</span> <span class="token operator">=</span> Partial<span class="token operator">&lt;</span>Info<span class="token operator">&gt;</span>
</code></pre></div><p>\u6700\u7B80\u5355\u7684\u6620\u5C04\u7C7B\u578B\u548C\u5B83\u7684\u7EC4\u6210\u6210\u5206</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Keys</span> <span class="token operator">=</span> <span class="token string">&#39;option1&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;option2&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Flags</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> Keys<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre></div><p>\u5B83\u7684\u8BED\u6CD5\u4E0E\u7D22\u5F15\u7B7E\u540D\u7684\u8BED\u6CD5\u7C7B\u578B\uFF0C\u5185\u90E8\u4F7F\u7528\u4E86<code>for...in</code>\uFF0C\u5177\u6709\u4E09\u4E2A\u90E8\u5206\uFF1A</p><ol><li>\u7C7B\u578B\u53D8\u91CF<code>K</code>\uFF0C\u5B83\u4F1A\u4F9D\u6B21\u7ED1\u5B9A\u5230\u6BCF\u4E2A\u5C5E\u6027\u3002</li><li>\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u8054\u5408\u7684<code>Keys</code>\uFF0C\u5B83\u5305\u542B\u4E86\u8981\u8FED\u4EE3\u7684\u5C5E\u6027\u540D\u7684\u96C6\u5408</li><li>\u5C5E\u6027\u7684\u7ED3\u679C\u7C7B\u578B</li></ol><p>\u5728\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\u91CC\uFF0C <code>Keys</code>\u662F\u786C\u7F16\u7801\u7684\u7684\u5C5E\u6027\u540D\u5217\u8868\u5E76\u4E14\u5C5E\u6027\u7C7B\u578B\u6C38\u8FDC\u662F <code>boolean</code>\uFF0C\u56E0\u6B64\u8FD9\u4E2A\u6620\u5C04\u7C7B\u578B\u7B49\u540C\u4E8E\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Flags</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    option1<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
    option2<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u771F\u6B63\u7684\u5E94\u7528\u91CC\uFF0C\u53EF\u80FD\u4E0D\u540C\u4E8E\u4E0A\u9762\u7684 <code>Readonly</code>\u6216 <code>Partial</code>\u3002 \u5B83\u4EEC\u4F1A\u57FA\u4E8E\u4E00\u4E9B\u5DF2\u5B58\u5728\u7684\u7C7B\u578B\uFF0C\u4E14\u6309\u7167\u4E00\u5B9A\u7684\u65B9\u5F0F\u8F6C\u6362\u5B57\u6BB5\u3002 \u8FD9\u5C31\u662F <code>keyof</code>\u548C\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\u8981\u505A\u7684\u4E8B\u60C5\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">NullablePerson</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">]</span><span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">PartialPerson</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Person<span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre></div><p>\u4F46\u5B83\u66F4\u6709\u7528\u7684\u5730\u65B9\u662F\u53EF\u4EE5\u6709\u4E00\u4E9B\u901A\u7528\u7248\u672C</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Nullable<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Partial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre></div><p>\u8FD8\u6709\u4E24\u4E2A\u5185\u7F6E\u6620\u5C04\u7C7B\u578B\uFF1A<code>Pick</code>\u3001<code>Record</code></p><div class="language-ts"><pre><code><span class="token comment">// Pick\u7684\u5B9E\u73B0\uFF0CPick\u6307\u7684\u662F\u539F\u6765\u7684\u5BF9\u8C61\u91CC\u9762\u7684\u4E00\u90E8\u5206\u5C5E\u6027\u540D\u7EC4\u6210\u7684\u4E00\u4E2A\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Record\u7684\u5B9E\u73B0 Record\u9002\u7528\u4E0E\u5C06\u4E00\u4E2A\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u4E2A\u5C5E\u6027\u8F6C\u6362\u4E3A\u5176\u4ED6\u503C\u7684\u4E00\u4E2A\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>Pick</code>\u7684\u4F7F\u7528\u573A\u666F\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    address<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> info<span class="token operator">:</span> Info <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;hh&#39;</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">;</span>
    address<span class="token operator">:</span> <span class="token string">&#39;beijing&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">pick</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> keys<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    keys<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
<span class="token keyword">const</span> nameAddress <span class="token operator">=</span> <span class="token function">pick</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;address&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// nameAddress\u7684\u7C7B\u578B\u4E3A\uFF1APick&lt;Info, &#39;name&#39; | &#39;address&#39;&gt;</span>
</code></pre></div><p><code>Record</code>\u4F7F\u7528\u573A\u666F\uFF1A\u5E38\u7528\u4E8E\u8981\u628A\u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\u8F6C\u6362\u4E3A\u5176\u4ED6\u503C\u7684\u4E00\u4E2A\u573A\u666F</p><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">mapObject</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token function-variable function">f</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> res<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;wrod&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token string">&#39;bye&#39;</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> lengths <span class="token operator">=</span> <span class="token function">mapObject</span><span class="token punctuation">(</span>names<span class="token punctuation">,</span> s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
</code></pre></div><p><code>Record</code>\u7B80\u5355\u4F7F\u7528\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">ThreeStringProps</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token string">&#39;prop1&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;prop2&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;prop3&#39;</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span>
</code></pre></div><p>\u540C\u6001\uFF1A\u4E24\u4E2A\u76F8\u540C\u7C7B\u578B\u7684\u4EE3\u6570\u7ED3\u6784\u4FDD\u6301\u6620\u5C04\uFF1B</p><p><code>Readonly</code>\u3001<code>Partial</code>\u3001<code>Pick</code>\u90FD\u662F\u540C\u6001\u7684\uFF1B<code>Record</code>\u4E0D\u662F\u540C\u6001\uFF0C\u56E0\u4E3A<code>Record</code>\u5E76\u4E0D\u9700\u8981\u8F93\u5165\u7C7B\u578B\u6765\u62F7\u8D1D\u5C5E\u6027\uFF0C\u6240\u4EE5\u5B83\u4E0D\u5C5E\u4E8E\u540C\u6001</p><p>\u975E\u540C\u6001\u7C7B\u578B\u672C\u8D28\u4E0A\u4F1A\u521B\u5EFA\u65B0\u7684\u5C5E\u6027\uFF0C\u56E0\u6B64\u5B83\u4EEC\u4E0D\u4F1A\u4ECE\u5B83\u5904\u62F7\u8D1D\u5C5E\u6027\u4FEE\u9970\u7B26\u3002</p><h2 id="\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD" tabindex="-1">\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD <a class="header-anchor" href="#\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD" aria-hidden="true">#</a></h2><ul><li>\u7C7B\u578B\u5305\u88C5</li></ul><p><code>T[P]</code>\u88AB\u5305\u88C5\u5728<code>Proxy&lt;T&gt;</code>\u7684\u7C7B\u91CC</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Proxy<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
    <span class="token comment">// set\u63A5\u6536\u7684\u503C\u7684\u7C7B\u578B\u5FC5\u987B\u548Cget\u8FD4\u56DE\u503C\u7684\u7C7B\u578B\u76F8\u540C</span>
    <span class="token function">set</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> Proxy<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">proxify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token keyword">let</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;heny&#39;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">18</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> proxyProps <span class="token operator">=</span> <span class="token function">proxify</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
</code></pre></div><ul><li>\u7C7B\u578B\u62C6\u5305</li></ul><div class="language-ts"><pre><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">unproxify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>t<span class="token operator">:</span> Proxify<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token constant">T</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> k <span class="token keyword">in</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> t<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token keyword">let</span> originalProps <span class="token operator">=</span> <span class="token function">unproxify</span><span class="token punctuation">(</span>proxyProps<span class="token punctuation">)</span>
</code></pre></div><p>\u5148\u770B\u4E0B\u600E\u4E48\u5C01\u88C5\u7684\uFF0C\u4E4B\u540E\u5199\u4E2A\u9006\u5411\u7684\u62C6\u5305\uFF0C\u8FD9\u4E2A\u5C31\u53EB\u505A\u4F7F\u7528\u6620\u5C04\u7C7B\u578B\u8FDB\u884C\u63A8\u65AD\u539F\u59CB\u7C7B\u578B\uFF1B</p><p>\u6CE8\u610F\uFF1A\u8FD9\u4E2A\u62C6\u5305\u63A8\u65AD\u53EA\u9002\u7528\u4E8E\u540C\u6001\u7684\u6620\u5C04\u7C7B\u578B\u3002 \u5982\u679C\u6620\u5C04\u7C7B\u578B\u4E0D\u662F\u540C\u6001\u7684\uFF0C\u90A3\u4E48\u9700\u8981\u7ED9\u62C6\u5305\u51FD\u6570\u4E00\u4E2A\u660E\u786E\u7684\u7C7B\u578B\u53C2\u6570\u3002</p><h2 id="\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26" tabindex="-1">\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26 <a class="header-anchor" href="#\u589E\u52A0\u6216\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26" aria-hidden="true">#</a></h2><p>\u4F7F\u7528<code>+</code>\u4E3A\u589E\u52A0\u4FEE\u9970\u7B26\uFF0C\u4F7F\u7528<code>-</code>\u4E3A\u79FB\u9664\u7279\u5B9A\u4FEE\u9970\u7B26</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">ReadonlyInfo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">+</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6761\u4EF6\u7C7B\u578B" tabindex="-1">\u6761\u4EF6\u7C7B\u578B <a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u5728<code>ts2.8</code>\u4EE5\u540E\u7684\u7C7B\u578B\uFF0C\u5B83\u4F1A\u8FDB\u884C\u4E00\u4E2A\u6761\u4EF6\u8868\u8FBE\u5F0F\uFF0C\u4E4B\u540E\u5728\u5176\u4E2D\u7684\u4E00\u4E2A\u7C7B\u578B\u4E2D\u9009\u62E9\u4E00\u4E2A\u7C7B\u578B\uFF0C\u7B80\u5355\u4F8B\u5B50\uFF1A<code>T extends U ? X : Y</code></p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Type1<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> nubmer
</code></pre></div><h2 id="\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" tabindex="-1">\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B <a class="header-anchor" href="#\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a></h2><p>\u5F53\u5F85\u68C0\u6D4B\u7684\u7C7B\u578B\u662F\u4E00\u4E2A\u8054\u5408\u7C7B\u578B\u7684\u65F6\u5019\uFF0C\u8BE5\u6761\u4EF6\u7C7B\u578B\u5C31\u88AB\u79F0\u4E3A\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\uFF0C\u5728\u5B9E\u4F8B\u5316\u7684\u65F6\u5019\uFF0Cts\u4F1A\u81EA\u52A8\u7684\u5206\u5316\u6210\u8054\u5408\u7C7B\u578B\uFF1B</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">TypeName<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> 
	<span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">number</span></span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token builtin">boolean</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token keyword">undefined</span></span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span>
    <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">:</span>
    object
    
<span class="token keyword">type</span> <span class="token class-name">Type1</span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token comment">// \u8FD4\u56DE\u51FD\u6570\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Type2</span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// \u8FD4\u56DEobject\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Type3</span> <span class="token operator">=</span> TypeName<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// \u8FD4\u56DE\u8054\u5408\u7C7B\u578B</span>
</code></pre></div><p>\u4F8B\u5B50\u4E8C\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Diff<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token comment">// \u5224\u65ADT\u7684\u7C7B\u578B\u662F\u5426\u662FU\u7684\u5B50\u7C7B\u578B\uFF0C\u7ECF\u8FC7\u5224\u65AD\uFF0Cnumber\u662F\uFF0C\u56E0\u6B64\u53EA\u6709number\u6CA1\u6709\u88AB\u8FD4\u56DE\u56DE\u6765</span>
<span class="token keyword">type</span> <span class="token class-name">Type2</span> <span class="token operator">=</span> Diff<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token operator">&gt;</span>
<span class="token comment">// Type2\u7684\u7C7B\u578B\u4E3A string | boolean</span>
</code></pre></div><p>\u4F8B\u5B50\u4E09\uFF1A</p><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Type3<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Function</span></span> <span class="token operator">?</span> <span class="token constant">P</span> <span class="token operator">:</span> <span class="token builtin">never</span>
<span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span> <span class="token comment">// \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\uFF0C\u5C06\u6240\u6709\u7684\u7C7B\u578B\u7EC4\u6210\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Part</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    subParts<span class="token operator">:</span> Part<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">undatePart</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    <span class="token function">subAdd</span><span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Type4</span> <span class="token operator">=</span> Type3<span class="token operator">&lt;</span>Part<span class="token operator">&gt;</span>
<span class="token comment">// Types4\u7684\u7C7B\u578B\u4E3A undatePart | subAdd\uFF0C\u56E0\u4E3A\u53EA\u6709\u8FD9\u4E24\u4E2A\u662F\u51FD\u6570\u7C7B\u578B</span>
</code></pre></div><h2 id="\u6761\u4EF6\u7C7B\u578B\u7684\u7C7B\u578B\u63A8\u65AD" tabindex="-1">\u6761\u4EF6\u7C7B\u578B\u7684\u7C7B\u578B\u63A8\u65AD <a class="header-anchor" href="#\u6761\u4EF6\u7C7B\u578B\u7684\u7C7B\u578B\u63A8\u65AD" aria-hidden="true">#</a></h2><p>\u4F7F\u7528<code>infer</code>\u5173\u952E\u5B57\u7528\u6765\u63A8\u65AD\u7C7B\u578B\uFF1B</p><p>\u4F8B\u5B50\uFF1A\u5F53\u4F20\u5165\u7684\u662F\u6570\u7EC4\u65F6\uFF0C\u8FD4\u56DE\u6570\u7EC4\u91CC\u9762\u7684\u5143\u7D20\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u4F20\u5165\u7684\u4E0D\u662F\u6570\u7EC4\uFF0C\u5219\u76F4\u63A5\u8FD4\u56DE\u8BE5\u7C7B\u578B</p><div class="language-ts"><pre><code><span class="token comment">// \u4E0D\u4F7F\u7528infer\u5B9E\u73B0\u65F6\uFF0C\u8FD9\u91CC\u7684T[number]\u4E3A\u7D22\u5F15\u8BBF\u95EE</span>
<span class="token keyword">type</span> <span class="token class-name">Type8<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span>
<span class="token keyword">type</span> <span class="token class-name">Type9</span> <span class="token operator">=</span> Type8<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token comment">// \u8FD4\u56DEstring\u7C7B\u578B,</span>
<span class="token keyword">type</span> <span class="token class-name">Type10</span> <span class="token operator">=</span> Type8<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token comment">//string</span>

<span class="token comment">// \u4F7F\u7528infer\u5B9E\u73B0\uFF0C\u5229\u7528\u4E00\u4E2A\u65B0\u6CDB\u578B\u53D8\u91CF\uFF0C\u76F4\u63A5\u4F7F\u7528U\u548C\u4E0A\u9762\u540C\u7406</span>
<span class="token keyword">type</span> <span class="token class-name">Type11<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span>
</code></pre></div><h2 id="\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" tabindex="-1">\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B <a class="header-anchor" href="#\u9884\u5B9A\u4E49\u7684\u6709\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a></h2><ul><li><code>Exclude&lt;T, U&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>Extract&lt;T, U&gt;</code> -- \u63D0\u53D6<code>T</code>\u4E2D\u53EF\u4EE5\u8D4B\u503C\u7ED9<code>U</code>\u7684\u7C7B\u578B\u3002</li><li><code>NonNullable&lt;T&gt;</code> -- \u4ECE<code>T</code>\u4E2D\u5254\u9664<code>null</code>\u548C<code>undefined</code>\u3002</li><li><code>ReturnType&lt;T&gt;</code> -- \u83B7\u53D6\u51FD\u6570\u8FD4\u56DE\u503C\u7C7B\u578B\u3002</li><li><code>InstanceType&lt;T&gt;</code> -- \u83B7\u53D6\u6784\u9020\u51FD\u6570\u7C7B\u578B\u7684\u5B9E\u4F8B\u7C7B\u578B\u3002</li></ul><div class="language-ts"><pre><code><span class="token keyword">type</span> <span class="token class-name">Type1</span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span><span class="token string">&#39;a&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;c&#39;</span><span class="token operator">&gt;</span> <span class="token comment">// Type1\u7C7B\u578B\u4E3A&#39;a&#39;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T03</span></span> <span class="token operator">=</span> Extract<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// () =&gt; void</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T10</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T11</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// void</span>
<span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">:</span> s <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T14</span></span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> f1<span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// { a: number, b: string }</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token constant">C</span></span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T20</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> <span class="token constant">C</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// C</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T21</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T22</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">never</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// any</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T23</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T24</span></span> <span class="token operator">=</span> InstanceType<span class="token operator">&lt;</span><span class="token builtin">Function</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>  <span class="token comment">// Error</span>

<span class="token comment">// \u6784\u9020\u51FD\u6570\u7684\u9ED8\u8BA4\u53C2\u6570\u5199\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token comment">// \u4F20\u5165\u7684\u5C31\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570</span>
</code></pre></div>`,111),e=[o];function c(l,k,r,u,i,d){return a(),s("div",null,e)}var m=n(t,[["render",c]]);export{g as __pageData,m as default};
