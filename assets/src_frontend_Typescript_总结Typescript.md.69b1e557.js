import{_ as n,c as s,o as a,d as p}from"./app.00f96e96.js";const m='{"title":"\u603B\u7ED3typescript","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5B9A\u4E49\u7C7B\u578B","slug":"\u5B9A\u4E49\u7C7B\u578B"},{"level":2,"title":"\u7C7B\u578B\u65AD\u8A00","slug":"\u7C7B\u578B\u65AD\u8A00"},{"level":2,"title":"interface\u63A5\u53E3","slug":"interface\u63A5\u53E3"},{"level":2,"title":"\u51FD\u6570\u7C7B\u578B","slug":"\u51FD\u6570\u7C7B\u578B"},{"level":2,"title":"\u6CDB\u578B","slug":"\u6CDB\u578B"},{"level":2,"title":"\u7C7B","slug":"\u7C7B"},{"level":2,"title":"\u679A\u4E3E","slug":"\u679A\u4E3E"},{"level":2,"title":"\u9AD8\u7EA7\u7C7B\u578B","slug":"\u9AD8\u7EA7\u7C7B\u578B"},{"level":2,"title":"keyof  | in | typeof","slug":"keyof-in-typeof"},{"level":2,"title":"\u5E38\u91CF\u5BF9\u8C61","slug":"\u5E38\u91CF\u5BF9\u8C61"},{"level":2,"title":"\u503C\u8F6C\u7C7B\u578B","slug":"\u503C\u8F6C\u7C7B\u578B"},{"level":3,"title":"\u6570\u7EC4\u8F6C\u8054\u5408\u7C7B\u578B","slug":"\u6570\u7EC4\u8F6C\u8054\u5408\u7C7B\u578B"},{"level":3,"title":"\u6570\u7EC4\u5BF9\u8C61\u952E\u8F6C\u8054\u5408","slug":"\u6570\u7EC4\u5BF9\u8C61\u952E\u8F6C\u8054\u5408"},{"level":3,"title":"\u5BF9\u8C61\u952E\u8F6C\u8054\u5408","slug":"\u5BF9\u8C61\u952E\u8F6C\u8054\u5408"},{"level":3,"title":"\u5BF9\u8C61\u952E\u503C\u8F6C\u8054\u5408","slug":"\u5BF9\u8C61\u952E\u503C\u8F6C\u8054\u5408"},{"level":2,"title":"\u5B89\u5168\u7684Omit","slug":"\u5B89\u5168\u7684omit"}],"relativePath":"src/frontend/Typescript/\u603B\u7ED3Typescript.md","lastUpdated":1649840977557}',t={},o=p(`<h1 id="\u603B\u7ED3typescript" tabindex="-1">\u603B\u7ED3typescript <a class="header-anchor" href="#\u603B\u7ED3typescript" aria-hidden="true">#</a></h1><h2 id="\u5B9A\u4E49\u7C7B\u578B" tabindex="-1">\u5B9A\u4E49\u7C7B\u578B <a class="header-anchor" href="#\u5B9A\u4E49\u7C7B\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">let</span> bool<span class="token operator">:</span><span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token keyword">let</span> num<span class="token operator">:</span><span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">let</span> str<span class="token operator">:</span><span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;str&#39;</span>
<span class="token keyword">let</span> u<span class="token operator">:</span><span class="token keyword">undefined</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">// \u5373\u662F\u503C\u4E5F\u662F\u7C7B\u578B</span>

<span class="token comment">// \u6570\u7EC4\u7C7B\u578B</span>
<span class="token keyword">let</span> arr1<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2<span class="token operator">:</span><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr3<span class="token operator">:</span><span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr4<span class="token operator">:</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;hny&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token comment">// \u5143\u7EC4\u7C7B\u578B</span>
<span class="token keyword">let</span> tulp<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span><span class="token builtin">number</span><span class="token punctuation">,</span><span class="token builtin">boolean</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;fd&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">]</span>

<span class="token comment">//any\u7C7B\u578B</span>
<span class="token keyword">let</span> arr<span class="token operator">:</span><span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment">// void \u7A7A\u7C7B\u578B \u51FD\u6570\u65E0\u8FD4\u56DE\u503C\u5199void</span>
<span class="token keyword">const</span> test <span class="token operator">=</span> <span class="token punctuation">(</span>text<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// object\u7C7B\u578B</span>
<span class="token keyword">const</span> getObj <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token operator">:</span>object<span class="token punctuation">)</span><span class="token operator">:</span><span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// unknow\u7C7B\u578B \u9876\u7EA7\u7C7B\u578B</span>
<span class="token keyword">let</span> value<span class="token operator">:</span><span class="token builtin">unknown</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1">\u7C7B\u578B\u65AD\u8A00 <a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token comment">// \u7B2C\u4E00\u79CD\uFF1A&lt;string&gt;target.length</span>
<span class="token comment">// \u7B2C\u4E8C\u79CD\uFF1A(target as string).length</span>
<span class="token comment">// window\uFF1A(window as any).foo = 1</span>
</code></pre></div><h2 id="interface\u63A5\u53E3" tabindex="-1">interface\u63A5\u53E3 <a class="header-anchor" href="#interface\u63A5\u53E3" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">interface</span> <span class="token class-name">Vegetable</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    <span class="token keyword">readonly</span> type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span>num<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
    <span class="token punctuation">[</span>prop<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u63A5\u53E3\u7EE7\u627F \u7EE7\u627F\u7684\u63A5\u53E3\u9700\u8981\u5305\u542B\u6240\u6709\u5C5E\u6027;</span>
<span class="token keyword">interface</span> <span class="token class-name">Tomato</span> <span class="token keyword">extends</span> <span class="token class-name">Vegetable</span> <span class="token punctuation">{</span>
    radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u51FD\u6570\u7C7B\u578B" tabindex="-1">\u51FD\u6570\u7C7B\u578B <a class="header-anchor" href="#\u51FD\u6570\u7C7B\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">add</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> arg2<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg1 <span class="token operator">+</span> arg2
<span class="token punctuation">}</span>
<span class="token comment">// \u7C7B\u578B\u522B\u540D</span>
<span class="token keyword">type</span> <span class="token class-name">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span> city <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> age<span class="token operator">?</span><span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">add</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u51FD\u6570\u91CD\u8F7D</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">reverse</span><span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6CDB\u578B" tabindex="-1">\u6CDB\u578B <a class="header-anchor" href="#\u6CDB\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">const</span> getArray <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">getArr<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> times<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	array<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CDB\u578B\u7EA6\u675F</span>
<span class="token keyword">interface</span> <span class="token class-name">ValueL</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span>
    b<span class="token operator">:</span> <span class="token string">&#39;b&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> getArr <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>object<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u6CDB\u578B\u9ED8\u8BA4\u503C</span>
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createArr</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><h2 id="\u7C7B" tabindex="-1">\u7C7B <a class="header-anchor" href="#\u7C7B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">class</span> <span class="token class-name">Parent</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
    <span class="token keyword">public</span> <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> age2<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">18</span>
    <span class="token keyword">private</span> _info<span class="token operator">:</span> <span class="token builtin">string</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> age<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token keyword">public</span> city<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
        <span class="token keyword">this</span><span class="token punctuation">.</span>city <span class="token operator">=</span> city
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> Parent<span class="token punctuation">.</span>age
    <span class="token punctuation">}</span>
    <span class="token keyword">get</span> <span class="token function">infoStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// get\u6709\u8FD4\u56DE\u503C, set\u4E0D\u80FD\u6709;</span>
    <span class="token keyword">set</span> <span class="token function">infoStr</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>_info <span class="token operator">=</span> val<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u62BD\u8C61\u7C7B abstract</span>
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">public</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Man</span> <span class="token keyword">extends</span> <span class="token class-name">People</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token function">printName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token comment">// \u9700\u8981\u5B9E\u73B0\u62BD\u8C61\u65B9\u6CD5;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6CDB\u578B\u4F7F\u7528\u7C7B\u7C7B\u578B</span>
<span class="token keyword">const</span> create <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>c<span class="token operator">:</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u679A\u4E3E" tabindex="-1">\u679A\u4E3E <a class="header-anchor" href="#\u679A\u4E3E" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">enum</span> Result <span class="token punctuation">{</span>
    Faild <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    success <span class="token operator">=</span> <span class="token string">&#39;success&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Status</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> Result<span class="token punctuation">.</span>success
<span class="token punctuation">}</span>
<span class="token keyword">const</span> status<span class="token operator">:</span> Status <span class="token operator">=</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> Result<span class="token punctuation">.</span>success
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u9AD8\u7EA7\u7C7B\u578B" tabindex="-1">\u9AD8\u7EA7\u7C7B\u578B <a class="header-anchor" href="#\u9AD8\u7EA7\u7C7B\u578B" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">// \u4EA4\u53C9\u7C7B\u578B</span>
<span class="token keyword">const</span> mergeFunc <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg1<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> arg2<span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">U</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u7C7B\u578B\u4FDD\u62A4</span>
<span class="token keyword">function</span> <span class="token function">isString</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> value <span class="token keyword">is</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">str</span> <span class="token operator">=</span> Info<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token comment">// \u8FD4\u56DEstring;</span>

<span class="token comment">// \u6761\u4EF6\u7C7B\u578B</span>
<span class="token keyword">type</span> <span class="token class-name">Type1<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">?</span> <span class="token builtin">string</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="keyof-in-typeof" tabindex="-1">keyof | in | typeof <a class="header-anchor" href="#keyof-in-typeof" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token comment">// keyof \u5C06\u63A5\u53E3\u7684\u5C5E\u6027\u540D\u7EC4\u5408\u6210\u8054\u5408\u7C7B\u578B</span>
<span class="token keyword">interface</span> <span class="token class-name">Info</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
    age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
    size<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> info<span class="token operator">:</span> <span class="token keyword">keyof</span> Info<span class="token punctuation">;</span> <span class="token comment">// (&#39;name&#39; | &#39;age&#39; | &#39;size&#39;) \u7C7B\u578B</span>
<span class="token keyword">let</span> info<span class="token operator">:</span> Info<span class="token punctuation">[</span><span class="token keyword">keyof</span> Info<span class="token punctuation">]</span> <span class="token comment">// (string | number) \u8054\u5408\u7C7B\u578B;\u4F1A\u53BB\u9664undefined\u7C7B\u578B</span>

<span class="token comment">// in \u5FAA\u73AF\u7C7B\u578BT;</span>
<span class="token keyword">type</span> <span class="token class-name">ReadInfo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token keyword">readonly</span> <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token comment">// typeof  \u8BBF\u95EE\u4E00\u7EC4\u503C\u7684\u7C7B\u578B</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;hhh&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span> <span class="token comment">// {name: string, age: number}</span>

</code></pre></div><p>\u5E38\u7528\u7684\u6620\u5C04\u7C7B\u578B\uFF1A<code>Readonly</code>\u3001<code>Partial</code>\u3001<code>Pick</code>\u3001<code>Record</code>\u3001<code>ReturnType</code></p><h2 id="\u5E38\u91CF\u5BF9\u8C61" tabindex="-1">\u5E38\u91CF\u5BF9\u8C61 <a class="header-anchor" href="#\u5E38\u91CF\u5BF9\u8C61" aria-hidden="true">#</a></h2><div class="language-ts"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token keyword">const</span><span class="token operator">&gt;</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;hny&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;hny&#39;</span><span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FD9\u6837\u5B9A\u4E49\u4E4B\u540E\u7C7B\u578B\u4E3A\u5E38\u91CF</span>
<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;uat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u503C\u8F6C\u7C7B\u578B" tabindex="-1">\u503C\u8F6C\u7C7B\u578B <a class="header-anchor" href="#\u503C\u8F6C\u7C7B\u578B" aria-hidden="true">#</a></h2><h3 id="\u6570\u7EC4\u8F6C\u8054\u5408\u7C7B\u578B" tabindex="-1">\u6570\u7EC4\u8F6C\u8054\u5408\u7C7B\u578B <a class="header-anchor" href="#\u6570\u7EC4\u8F6C\u8054\u5408\u7C7B\u578B" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token keyword">const</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token string">&#39;uat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prod&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Keys</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> arr<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;uat&#39; | &#39;pre&#39; | &#39;prod&#39;</span>
</code></pre></div><h3 id="\u6570\u7EC4\u5BF9\u8C61\u952E\u8F6C\u8054\u5408" tabindex="-1">\u6570\u7EC4\u5BF9\u8C61\u952E\u8F6C\u8054\u5408 <a class="header-anchor" href="#\u6570\u7EC4\u5BF9\u8C61\u952E\u8F6C\u8054\u5408" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;uat&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;sit&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;uat&#39; | &#39;sit&#39;</span>
</code></pre></div><h3 id="\u5BF9\u8C61\u952E\u8F6C\u8054\u5408" tabindex="-1">\u5BF9\u8C61\u952E\u8F6C\u8054\u5408 <a class="header-anchor" href="#\u5BF9\u8C61\u952E\u8F6C\u8054\u5408" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    env<span class="token operator">:</span> <span class="token string">&#39;uat&#39;</span><span class="token punctuation">,</span>
    build<span class="token operator">:</span> <span class="token string">&#39;sit&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">;</span> <span class="token comment">// &#39;env&#39; | &#39;build&#39;</span>
</code></pre></div><h3 id="\u5BF9\u8C61\u952E\u503C\u8F6C\u8054\u5408" tabindex="-1">\u5BF9\u8C61\u952E\u503C\u8F6C\u8054\u5408 <a class="header-anchor" href="#\u5BF9\u8C61\u952E\u503C\u8F6C\u8054\u5408" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  env<span class="token operator">:</span> <span class="token string">&#39;uat&#39;</span><span class="token punctuation">,</span>
  build<span class="token operator">:</span> <span class="token string">&#39;sit&#39;</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Obj</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span><span class="token keyword">keyof</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// &#39;uat&#39; | &#39;sit&#39;</span>
</code></pre></div><h2 id="\u5B89\u5168\u7684omit" tabindex="-1">\u5B89\u5168\u7684Omit <a class="header-anchor" href="#\u5B89\u5168\u7684omit" aria-hidden="true">#</a></h2><p>\u89E3\u51B3\u6389omit\u6CA1\u6709\u5176\u4ED6\u5C5E\u6027\u7684\u95EE\u9898</p><div class="language-ts"><pre><code><span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">Convert<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token builtin">number</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token builtin">symbol</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">K</span></span>
    <span class="token operator">?</span> <span class="token builtin">never</span>
    <span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/**
 * @description \u6D88\u9664 [x:string]:any
 */</span>
<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">Keys<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Convert<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>_ <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
  <span class="token operator">?</span> <span class="token constant">U</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">SafeOmit<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span>
  <span class="token operator">?</span> Pick<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Exclude<span class="token operator">&lt;</span>Keys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">K</span><span class="token operator">&gt;&gt;</span>
  <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,34),e=[o];function c(l,k,r,u,i,d){return a(),s("div",null,e)}var b=n(t,[["render",c]]);export{m as __pageData,b as default};
